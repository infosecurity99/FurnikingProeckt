{"ast":null,"code":"'use strict';\n\nvar gitHosts = module.exports = {\n  github: {\n    // First two are insecure and generally shouldn't be used any more, but\n    // they are still supported.\n    'protocols': ['git', 'http', 'git+ssh', 'git+https', 'ssh', 'https'],\n    'domain': 'github.com',\n    'treepath': 'tree',\n    'filetemplate': 'https://{auth@}raw.githubusercontent.com/{user}/{project}/{committish}/{path}',\n    'bugstemplate': 'https://{domain}/{user}/{project}/issues',\n    'gittemplate': 'git://{auth@}{domain}/{user}/{project}.git{#committish}',\n    'tarballtemplate': 'https://{domain}/{user}/{project}/archive/{committish}.tar.gz'\n  },\n  bitbucket: {\n    'protocols': ['git+ssh', 'git+https', 'ssh', 'https'],\n    'domain': 'bitbucket.org',\n    'treepath': 'src',\n    'tarballtemplate': 'https://{domain}/{user}/{project}/get/{committish}.tar.gz'\n  },\n  gitlab: {\n    'protocols': ['git+ssh', 'git+https', 'ssh', 'https'],\n    'domain': 'gitlab.com',\n    'treepath': 'tree',\n    'docstemplate': 'https://{domain}/{user}/{project}{/tree/committish}#README',\n    'bugstemplate': 'https://{domain}/{user}/{project}/issues',\n    'tarballtemplate': 'https://{domain}/{user}/{project}/repository/archive.tar.gz?ref={committish}'\n  },\n  gist: {\n    'protocols': ['git', 'git+ssh', 'git+https', 'ssh', 'https'],\n    'domain': 'gist.github.com',\n    'pathmatch': /^[/](?:([^/]+)[/])?([a-z0-9]+)(?:[.]git)?$/,\n    'filetemplate': 'https://gist.githubusercontent.com/{user}/{project}/raw{/committish}/{path}',\n    'bugstemplate': 'https://{domain}/{project}',\n    'gittemplate': 'git://{domain}/{project}.git{#committish}',\n    'sshtemplate': 'git@{domain}:/{project}.git{#committish}',\n    'sshurltemplate': 'git+ssh://git@{domain}/{project}.git{#committish}',\n    'browsetemplate': 'https://{domain}/{project}{/committish}',\n    'docstemplate': 'https://{domain}/{project}{/committish}',\n    'httpstemplate': 'git+https://{domain}/{project}.git{#committish}',\n    'shortcuttemplate': '{type}:{project}{#committish}',\n    'pathtemplate': '{project}{#committish}',\n    'tarballtemplate': 'https://{domain}/{user}/{project}/archive/{committish}.tar.gz'\n  }\n};\nvar gitHostDefaults = {\n  'sshtemplate': 'git@{domain}:{user}/{project}.git{#committish}',\n  'sshurltemplate': 'git+ssh://git@{domain}/{user}/{project}.git{#committish}',\n  'browsetemplate': 'https://{domain}/{user}/{project}{/tree/committish}',\n  'docstemplate': 'https://{domain}/{user}/{project}{/tree/committish}#readme',\n  'httpstemplate': 'git+https://{auth@}{domain}/{user}/{project}.git{#committish}',\n  'filetemplate': 'https://{domain}/{user}/{project}/raw/{committish}/{path}',\n  'shortcuttemplate': '{type}:{user}/{project}{#committish}',\n  'pathtemplate': '{user}/{project}{#committish}',\n  'pathmatch': /^[/]([^/]+)[/]([^/]+?)(?:[.]git|[/])?$/\n};\nObject.keys(gitHosts).forEach(function (name) {\n  Object.keys(gitHostDefaults).forEach(function (key) {\n    if (gitHosts[name][key]) return;\n    gitHosts[name][key] = gitHostDefaults[key];\n  });\n  gitHosts[name].protocols_re = RegExp('^(' + gitHosts[name].protocols.map(function (protocol) {\n    return protocol.replace(/([\\\\+*{}()[\\]$^|])/g, '\\\\$1');\n  }).join('|') + '):$');\n});","map":{"version":3,"sources":["C:/Users/Hp/node_modules/npx/node_modules/hosted-git-info/git-host-info.js"],"names":["gitHosts","module","exports","github","bitbucket","gitlab","gist","gitHostDefaults","Object","keys","forEach","name","key","protocols_re","RegExp","protocols","map","protocol","replace","join"],"mappings":"AAAA;;AAEA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,OAAP,GAAiB;AAC9BC,EAAAA,MAAM,EAAE;AACN;AACA;AACA,iBAAa,CAAE,KAAF,EAAS,MAAT,EAAiB,SAAjB,EAA4B,WAA5B,EAAyC,KAAzC,EAAgD,OAAhD,CAHP;AAIN,cAAU,YAJJ;AAKN,gBAAY,MALN;AAMN,oBAAgB,+EANV;AAON,oBAAgB,0CAPV;AAQN,mBAAe,yDART;AASN,uBAAmB;AATb,GADsB;AAY9BC,EAAAA,SAAS,EAAE;AACT,iBAAa,CAAE,SAAF,EAAa,WAAb,EAA0B,KAA1B,EAAiC,OAAjC,CADJ;AAET,cAAU,eAFD;AAGT,gBAAY,KAHH;AAIT,uBAAmB;AAJV,GAZmB;AAkB9BC,EAAAA,MAAM,EAAE;AACN,iBAAa,CAAE,SAAF,EAAa,WAAb,EAA0B,KAA1B,EAAiC,OAAjC,CADP;AAEN,cAAU,YAFJ;AAGN,gBAAY,MAHN;AAIN,oBAAgB,4DAJV;AAKN,oBAAgB,0CALV;AAMN,uBAAmB;AANb,GAlBsB;AA0B9BC,EAAAA,IAAI,EAAE;AACJ,iBAAa,CAAE,KAAF,EAAS,SAAT,EAAoB,WAApB,EAAiC,KAAjC,EAAwC,OAAxC,CADT;AAEJ,cAAU,iBAFN;AAGJ,iBAAa,4CAHT;AAIJ,oBAAgB,6EAJZ;AAKJ,oBAAgB,4BALZ;AAMJ,mBAAe,2CANX;AAOJ,mBAAe,0CAPX;AAQJ,sBAAkB,mDARd;AASJ,sBAAkB,yCATd;AAUJ,oBAAgB,yCAVZ;AAWJ,qBAAiB,iDAXb;AAYJ,wBAAoB,+BAZhB;AAaJ,oBAAgB,wBAbZ;AAcJ,uBAAmB;AAdf;AA1BwB,CAAhC;AA4CA,IAAIC,eAAe,GAAG;AACpB,iBAAe,gDADK;AAEpB,oBAAkB,0DAFE;AAGpB,oBAAkB,qDAHE;AAIpB,kBAAgB,4DAJI;AAKpB,mBAAiB,+DALG;AAMpB,kBAAgB,2DANI;AAOpB,sBAAoB,sCAPA;AAQpB,kBAAgB,+BARI;AASpB,eAAa;AATO,CAAtB;AAYAC,MAAM,CAACC,IAAP,CAAYT,QAAZ,EAAsBU,OAAtB,CAA8B,UAAUC,IAAV,EAAgB;AAC5CH,EAAAA,MAAM,CAACC,IAAP,CAAYF,eAAZ,EAA6BG,OAA7B,CAAqC,UAAUE,GAAV,EAAe;AAClD,QAAIZ,QAAQ,CAACW,IAAD,CAAR,CAAeC,GAAf,CAAJ,EAAyB;AACzBZ,IAAAA,QAAQ,CAACW,IAAD,CAAR,CAAeC,GAAf,IAAsBL,eAAe,CAACK,GAAD,CAArC;AACD,GAHD;AAIAZ,EAAAA,QAAQ,CAACW,IAAD,CAAR,CAAeE,YAAf,GAA8BC,MAAM,CAAC,OACnCd,QAAQ,CAACW,IAAD,CAAR,CAAeI,SAAf,CAAyBC,GAAzB,CAA6B,UAAUC,QAAV,EAAoB;AAC/C,WAAOA,QAAQ,CAACC,OAAT,CAAiB,qBAAjB,EAAwC,MAAxC,CAAP;AACD,GAFD,EAEGC,IAFH,CAEQ,GAFR,CADmC,GAGpB,KAHmB,CAApC;AAID,CATD","sourcesContent":["'use strict'\n\nvar gitHosts = module.exports = {\n  github: {\n    // First two are insecure and generally shouldn't be used any more, but\n    // they are still supported.\n    'protocols': [ 'git', 'http', 'git+ssh', 'git+https', 'ssh', 'https' ],\n    'domain': 'github.com',\n    'treepath': 'tree',\n    'filetemplate': 'https://{auth@}raw.githubusercontent.com/{user}/{project}/{committish}/{path}',\n    'bugstemplate': 'https://{domain}/{user}/{project}/issues',\n    'gittemplate': 'git://{auth@}{domain}/{user}/{project}.git{#committish}',\n    'tarballtemplate': 'https://{domain}/{user}/{project}/archive/{committish}.tar.gz'\n  },\n  bitbucket: {\n    'protocols': [ 'git+ssh', 'git+https', 'ssh', 'https' ],\n    'domain': 'bitbucket.org',\n    'treepath': 'src',\n    'tarballtemplate': 'https://{domain}/{user}/{project}/get/{committish}.tar.gz'\n  },\n  gitlab: {\n    'protocols': [ 'git+ssh', 'git+https', 'ssh', 'https' ],\n    'domain': 'gitlab.com',\n    'treepath': 'tree',\n    'docstemplate': 'https://{domain}/{user}/{project}{/tree/committish}#README',\n    'bugstemplate': 'https://{domain}/{user}/{project}/issues',\n    'tarballtemplate': 'https://{domain}/{user}/{project}/repository/archive.tar.gz?ref={committish}'\n  },\n  gist: {\n    'protocols': [ 'git', 'git+ssh', 'git+https', 'ssh', 'https' ],\n    'domain': 'gist.github.com',\n    'pathmatch': /^[/](?:([^/]+)[/])?([a-z0-9]+)(?:[.]git)?$/,\n    'filetemplate': 'https://gist.githubusercontent.com/{user}/{project}/raw{/committish}/{path}',\n    'bugstemplate': 'https://{domain}/{project}',\n    'gittemplate': 'git://{domain}/{project}.git{#committish}',\n    'sshtemplate': 'git@{domain}:/{project}.git{#committish}',\n    'sshurltemplate': 'git+ssh://git@{domain}/{project}.git{#committish}',\n    'browsetemplate': 'https://{domain}/{project}{/committish}',\n    'docstemplate': 'https://{domain}/{project}{/committish}',\n    'httpstemplate': 'git+https://{domain}/{project}.git{#committish}',\n    'shortcuttemplate': '{type}:{project}{#committish}',\n    'pathtemplate': '{project}{#committish}',\n    'tarballtemplate': 'https://{domain}/{user}/{project}/archive/{committish}.tar.gz'\n  }\n}\n\nvar gitHostDefaults = {\n  'sshtemplate': 'git@{domain}:{user}/{project}.git{#committish}',\n  'sshurltemplate': 'git+ssh://git@{domain}/{user}/{project}.git{#committish}',\n  'browsetemplate': 'https://{domain}/{user}/{project}{/tree/committish}',\n  'docstemplate': 'https://{domain}/{user}/{project}{/tree/committish}#readme',\n  'httpstemplate': 'git+https://{auth@}{domain}/{user}/{project}.git{#committish}',\n  'filetemplate': 'https://{domain}/{user}/{project}/raw/{committish}/{path}',\n  'shortcuttemplate': '{type}:{user}/{project}{#committish}',\n  'pathtemplate': '{user}/{project}{#committish}',\n  'pathmatch': /^[/]([^/]+)[/]([^/]+?)(?:[.]git|[/])?$/\n}\n\nObject.keys(gitHosts).forEach(function (name) {\n  Object.keys(gitHostDefaults).forEach(function (key) {\n    if (gitHosts[name][key]) return\n    gitHosts[name][key] = gitHostDefaults[key]\n  })\n  gitHosts[name].protocols_re = RegExp('^(' +\n    gitHosts[name].protocols.map(function (protocol) {\n      return protocol.replace(/([\\\\+*{}()[\\]$^|])/g, '\\\\$1')\n    }).join('|') + '):$')\n})\n"]},"metadata":{},"sourceType":"script"}