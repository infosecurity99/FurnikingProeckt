{"ast":null,"code":"'use strict';\n\nvar errorEx = require('error-ex');\n\nvar fallback = require('./vendor/parse');\n\nvar JSONError = errorEx('JSONError', {\n  fileName: errorEx.append('in %s')\n});\n\nmodule.exports = function (x, reviver, filename) {\n  if (typeof reviver === 'string') {\n    filename = reviver;\n    reviver = null;\n  }\n\n  try {\n    try {\n      return JSON.parse(x, reviver);\n    } catch (err) {\n      fallback.parse(x, {\n        mode: 'json',\n        reviver: reviver\n      });\n      throw err;\n    }\n  } catch (err) {\n    var jsonErr = new JSONError(err);\n\n    if (filename) {\n      jsonErr.fileName = filename;\n    }\n\n    throw jsonErr;\n  }\n};","map":{"version":3,"sources":["C:/Users/Hp/node_modules/npx/node_modules/parse-json/index.js"],"names":["errorEx","require","fallback","JSONError","fileName","append","module","exports","x","reviver","filename","JSON","parse","err","mode","jsonErr"],"mappings":"AAAA;;AACA,IAAIA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,gBAAD,CAAtB;;AAEA,IAAIE,SAAS,GAAGH,OAAO,CAAC,WAAD,EAAc;AACpCI,EAAAA,QAAQ,EAAEJ,OAAO,CAACK,MAAR,CAAe,OAAf;AAD0B,CAAd,CAAvB;;AAIAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,CAAV,EAAaC,OAAb,EAAsBC,QAAtB,EAAgC;AAChD,MAAI,OAAOD,OAAP,KAAmB,QAAvB,EAAiC;AAChCC,IAAAA,QAAQ,GAAGD,OAAX;AACAA,IAAAA,OAAO,GAAG,IAAV;AACA;;AAED,MAAI;AACH,QAAI;AACH,aAAOE,IAAI,CAACC,KAAL,CAAWJ,CAAX,EAAcC,OAAd,CAAP;AACA,KAFD,CAEE,OAAOI,GAAP,EAAY;AACbX,MAAAA,QAAQ,CAACU,KAAT,CAAeJ,CAAf,EAAkB;AACjBM,QAAAA,IAAI,EAAE,MADW;AAEjBL,QAAAA,OAAO,EAAEA;AAFQ,OAAlB;AAKA,YAAMI,GAAN;AACA;AACD,GAXD,CAWE,OAAOA,GAAP,EAAY;AACb,QAAIE,OAAO,GAAG,IAAIZ,SAAJ,CAAcU,GAAd,CAAd;;AAEA,QAAIH,QAAJ,EAAc;AACbK,MAAAA,OAAO,CAACX,QAAR,GAAmBM,QAAnB;AACA;;AAED,UAAMK,OAAN;AACA;AACD,CA1BD","sourcesContent":["'use strict';\nvar errorEx = require('error-ex');\nvar fallback = require('./vendor/parse');\n\nvar JSONError = errorEx('JSONError', {\n\tfileName: errorEx.append('in %s')\n});\n\nmodule.exports = function (x, reviver, filename) {\n\tif (typeof reviver === 'string') {\n\t\tfilename = reviver;\n\t\treviver = null;\n\t}\n\n\ttry {\n\t\ttry {\n\t\t\treturn JSON.parse(x, reviver);\n\t\t} catch (err) {\n\t\t\tfallback.parse(x, {\n\t\t\t\tmode: 'json',\n\t\t\t\treviver: reviver\n\t\t\t});\n\n\t\t\tthrow err;\n\t\t}\n\t} catch (err) {\n\t\tvar jsonErr = new JSONError(err);\n\n\t\tif (filename) {\n\t\t\tjsonErr.fileName = filename;\n\t\t}\n\n\t\tthrow jsonErr;\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}