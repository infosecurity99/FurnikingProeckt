{"ast":null,"code":"'use strict'; // The Node team wants to deprecate `process.bind(...)`.\n//   https://github.com/nodejs/node/pull/2768\n//\n// However, we need the 'uv' binding for errname support.\n// This is a defensive wrapper around it so `execa` will not fail entirely if it stops working someday.\n//\n// If this ever stops working. See: https://github.com/sindresorhus/execa/issues/31#issuecomment-215939939 for another possible solution.\n\nlet uv;\n\ntry {\n  uv = process.binding('uv');\n\n  if (typeof uv.errname !== 'function') {\n    throw new Error('uv.errname is not a function');\n  }\n} catch (err) {\n  console.error('execa/lib/errname: unable to establish process.binding(\\'uv\\')', err);\n  uv = null;\n}\n\nfunction errname(uv, code) {\n  if (uv) {\n    return uv.errname(code);\n  }\n\n  if (!(code < 0)) {\n    throw new Error('err >= 0');\n  }\n\n  return `Unknown system error ${code}`;\n}\n\nmodule.exports = code => errname(uv, code); // used for testing the fallback behavior\n\n\nmodule.exports.__test__ = errname;","map":{"version":3,"sources":["C:/Users/Hp/node_modules/npx/node_modules/execa/lib/errname.js"],"names":["uv","process","binding","errname","Error","err","console","error","code","module","exports","__test__"],"mappings":"AAAA,a,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIA,EAAJ;;AAEA,IAAI;AACHA,EAAAA,EAAE,GAAGC,OAAO,CAACC,OAAR,CAAgB,IAAhB,CAAL;;AAEA,MAAI,OAAOF,EAAE,CAACG,OAAV,KAAsB,UAA1B,EAAsC;AACrC,UAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACA;AACD,CAND,CAME,OAAOC,GAAP,EAAY;AACbC,EAAAA,OAAO,CAACC,KAAR,CAAc,gEAAd,EAAgFF,GAAhF;AACAL,EAAAA,EAAE,GAAG,IAAL;AACA;;AAED,SAASG,OAAT,CAAiBH,EAAjB,EAAqBQ,IAArB,EAA2B;AAC1B,MAAIR,EAAJ,EAAQ;AACP,WAAOA,EAAE,CAACG,OAAH,CAAWK,IAAX,CAAP;AACA;;AAED,MAAI,EAAEA,IAAI,GAAG,CAAT,CAAJ,EAAiB;AAChB,UAAM,IAAIJ,KAAJ,CAAU,UAAV,CAAN;AACA;;AAED,SAAQ,wBAAuBI,IAAK,EAApC;AACA;;AAEDC,MAAM,CAACC,OAAP,GAAiBF,IAAI,IAAIL,OAAO,CAACH,EAAD,EAAKQ,IAAL,CAAhC,C,CAEA;;;AACAC,MAAM,CAACC,OAAP,CAAeC,QAAf,GAA0BR,OAA1B","sourcesContent":["'use strict';\n// The Node team wants to deprecate `process.bind(...)`.\n//   https://github.com/nodejs/node/pull/2768\n//\n// However, we need the 'uv' binding for errname support.\n// This is a defensive wrapper around it so `execa` will not fail entirely if it stops working someday.\n//\n// If this ever stops working. See: https://github.com/sindresorhus/execa/issues/31#issuecomment-215939939 for another possible solution.\nlet uv;\n\ntry {\n\tuv = process.binding('uv');\n\n\tif (typeof uv.errname !== 'function') {\n\t\tthrow new Error('uv.errname is not a function');\n\t}\n} catch (err) {\n\tconsole.error('execa/lib/errname: unable to establish process.binding(\\'uv\\')', err);\n\tuv = null;\n}\n\nfunction errname(uv, code) {\n\tif (uv) {\n\t\treturn uv.errname(code);\n\t}\n\n\tif (!(code < 0)) {\n\t\tthrow new Error('err >= 0');\n\t}\n\n\treturn `Unknown system error ${code}`;\n}\n\nmodule.exports = code => errname(uv, code);\n\n// used for testing the fallback behavior\nmodule.exports.__test__ = errname;\n"]},"metadata":{},"sourceType":"script"}