{"ast":null,"code":"/* parser generated by jison 0.4.17 */\n\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar spdxparse = function () {\n  var o = function (k, v, o, l) {\n    for (o = o || {}, l = k.length; l--; o[k[l]] = v);\n\n    return o;\n  },\n      $V0 = [1, 5],\n      $V1 = [1, 6],\n      $V2 = [1, 7],\n      $V3 = [1, 4],\n      $V4 = [1, 9],\n      $V5 = [1, 10],\n      $V6 = [5, 14, 15, 17],\n      $V7 = [5, 12, 14, 15, 17];\n\n  var parser = {\n    trace: function trace() {},\n    yy: {},\n    symbols_: {\n      \"error\": 2,\n      \"start\": 3,\n      \"expression\": 4,\n      \"EOS\": 5,\n      \"simpleExpression\": 6,\n      \"LICENSE\": 7,\n      \"PLUS\": 8,\n      \"LICENSEREF\": 9,\n      \"DOCUMENTREF\": 10,\n      \"COLON\": 11,\n      \"WITH\": 12,\n      \"EXCEPTION\": 13,\n      \"AND\": 14,\n      \"OR\": 15,\n      \"OPEN\": 16,\n      \"CLOSE\": 17,\n      \"$accept\": 0,\n      \"$end\": 1\n    },\n    terminals_: {\n      2: \"error\",\n      5: \"EOS\",\n      7: \"LICENSE\",\n      8: \"PLUS\",\n      9: \"LICENSEREF\",\n      10: \"DOCUMENTREF\",\n      11: \"COLON\",\n      12: \"WITH\",\n      13: \"EXCEPTION\",\n      14: \"AND\",\n      15: \"OR\",\n      16: \"OPEN\",\n      17: \"CLOSE\"\n    },\n    productions_: [0, [3, 2], [6, 1], [6, 2], [6, 1], [6, 3], [4, 1], [4, 3], [4, 3], [4, 3], [4, 3]],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate\n    /* action[1] */\n    , $$\n    /* vstack */\n    , _$\n    /* lstack */\n    ) {\n      /* this == yyval */\n      var $0 = $$.length - 1;\n\n      switch (yystate) {\n        case 1:\n          return this.$ = $$[$0 - 1];\n          break;\n\n        case 2:\n        case 4:\n        case 5:\n          this.$ = {\n            license: yytext\n          };\n          break;\n\n        case 3:\n          this.$ = {\n            license: $$[$0 - 1],\n            plus: true\n          };\n          break;\n\n        case 6:\n          this.$ = $$[$0];\n          break;\n\n        case 7:\n          this.$ = {\n            exception: $$[$0]\n          };\n          this.$.license = $$[$0 - 2].license;\n\n          if ($$[$0 - 2].hasOwnProperty('plus')) {\n            this.$.plus = $$[$0 - 2].plus;\n          }\n\n          break;\n\n        case 8:\n          this.$ = {\n            conjunction: 'and',\n            left: $$[$0 - 2],\n            right: $$[$0]\n          };\n          break;\n\n        case 9:\n          this.$ = {\n            conjunction: 'or',\n            left: $$[$0 - 2],\n            right: $$[$0]\n          };\n          break;\n\n        case 10:\n          this.$ = $$[$0 - 1];\n          break;\n      }\n    },\n    table: [{\n      3: 1,\n      4: 2,\n      6: 3,\n      7: $V0,\n      9: $V1,\n      10: $V2,\n      16: $V3\n    }, {\n      1: [3]\n    }, {\n      5: [1, 8],\n      14: $V4,\n      15: $V5\n    }, o($V6, [2, 6], {\n      12: [1, 11]\n    }), {\n      4: 12,\n      6: 3,\n      7: $V0,\n      9: $V1,\n      10: $V2,\n      16: $V3\n    }, o($V7, [2, 2], {\n      8: [1, 13]\n    }), o($V7, [2, 4]), {\n      11: [1, 14]\n    }, {\n      1: [2, 1]\n    }, {\n      4: 15,\n      6: 3,\n      7: $V0,\n      9: $V1,\n      10: $V2,\n      16: $V3\n    }, {\n      4: 16,\n      6: 3,\n      7: $V0,\n      9: $V1,\n      10: $V2,\n      16: $V3\n    }, {\n      13: [1, 17]\n    }, {\n      14: $V4,\n      15: $V5,\n      17: [1, 18]\n    }, o($V7, [2, 3]), {\n      9: [1, 19]\n    }, o($V6, [2, 8]), o([5, 15, 17], [2, 9], {\n      14: $V4\n    }), o($V6, [2, 7]), o($V6, [2, 10]), o($V7, [2, 5])],\n    defaultActions: {\n      8: [2, 1]\n    },\n    parseError: function parseError(str, hash) {\n      if (hash.recoverable) {\n        this.trace(str);\n      } else {\n        function _parseError(msg, hash) {\n          this.message = msg;\n          this.hash = hash;\n        }\n\n        _parseError.prototype = Error;\n        throw new _parseError(str, hash);\n      }\n    },\n    parse: function parse(input) {\n      var self = this,\n          stack = [0],\n          tstack = [],\n          vstack = [null],\n          lstack = [],\n          table = this.table,\n          yytext = '',\n          yylineno = 0,\n          yyleng = 0,\n          recovering = 0,\n          TERROR = 2,\n          EOF = 1;\n      var args = lstack.slice.call(arguments, 1);\n      var lexer = Object.create(this.lexer);\n      var sharedState = {\n        yy: {}\n      };\n\n      for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n          sharedState.yy[k] = this.yy[k];\n        }\n      }\n\n      lexer.setInput(input, sharedState.yy);\n      sharedState.yy.lexer = lexer;\n      sharedState.yy.parser = this;\n\n      if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n      }\n\n      var yyloc = lexer.yylloc;\n      lstack.push(yyloc);\n      var ranges = lexer.options && lexer.options.ranges;\n\n      if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n      } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n      }\n\n      function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n      }\n\n      _token_stack: var lex = function () {\n        var token;\n        token = lexer.lex() || EOF;\n\n        if (typeof token !== 'number') {\n          token = self.symbols_[token] || token;\n        }\n\n        return token;\n      };\n\n      var symbol,\n          preErrorSymbol,\n          state,\n          action,\n          a,\n          r,\n          yyval = {},\n          p,\n          len,\n          newState,\n          expected;\n\n      while (true) {\n        state = stack[stack.length - 1];\n\n        if (this.defaultActions[state]) {\n          action = this.defaultActions[state];\n        } else {\n          if (symbol === null || typeof symbol == 'undefined') {\n            symbol = lex();\n          }\n\n          action = table[state] && table[state][symbol];\n        }\n\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n          var errStr = '';\n          expected = [];\n\n          for (p in table[state]) {\n            if (this.terminals_[p] && p > TERROR) {\n              expected.push('\\'' + this.terminals_[p] + '\\'');\n            }\n          }\n\n          if (lexer.showPosition) {\n            errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n          } else {\n            errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n          }\n\n          this.parseError(errStr, {\n            text: lexer.match,\n            token: this.terminals_[symbol] || symbol,\n            line: lexer.yylineno,\n            loc: yyloc,\n            expected: expected\n          });\n        }\n\n        if (action[0] instanceof Array && action.length > 1) {\n          throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n\n        switch (action[0]) {\n          case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n\n            if (!preErrorSymbol) {\n              yyleng = lexer.yyleng;\n              yytext = lexer.yytext;\n              yylineno = lexer.yylineno;\n              yyloc = lexer.yylloc;\n\n              if (recovering > 0) {\n                recovering--;\n              }\n            } else {\n              symbol = preErrorSymbol;\n              preErrorSymbol = null;\n            }\n\n            break;\n\n          case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n              first_line: lstack[lstack.length - (len || 1)].first_line,\n              last_line: lstack[lstack.length - 1].last_line,\n              first_column: lstack[lstack.length - (len || 1)].first_column,\n              last_column: lstack[lstack.length - 1].last_column\n            };\n\n            if (ranges) {\n              yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n\n            r = this.performAction.apply(yyval, [yytext, yyleng, yylineno, sharedState.yy, action[1], vstack, lstack].concat(args));\n\n            if (typeof r !== 'undefined') {\n              return r;\n            }\n\n            if (len) {\n              stack = stack.slice(0, -1 * len * 2);\n              vstack = vstack.slice(0, -1 * len);\n              lstack = lstack.slice(0, -1 * len);\n            }\n\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n\n          case 3:\n            return true;\n        }\n      }\n\n      return true;\n    }\n  };\n  /* generated by jison-lex 0.3.4 */\n\n  var lexer = function () {\n    var lexer = {\n      EOF: 1,\n      parseError: function parseError(str, hash) {\n        if (this.yy.parser) {\n          this.yy.parser.parseError(str, hash);\n        } else {\n          throw new Error(str);\n        }\n      },\n      // resets the lexer, sets new input\n      setInput: function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n          first_line: 1,\n          first_column: 0,\n          last_line: 1,\n          last_column: 0\n        };\n\n        if (this.options.ranges) {\n          this.yylloc.range = [0, 0];\n        }\n\n        this.offset = 0;\n        return this;\n      },\n      // consumes and returns one char from the input\n      input: function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\n        if (lines) {\n          this.yylineno++;\n          this.yylloc.last_line++;\n        } else {\n          this.yylloc.last_column++;\n        }\n\n        if (this.options.ranges) {\n          this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n      },\n      // unshifts one char (or a string) into the input\n      unput: function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len); //this.yyleng -= len;\n\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n          this.yylineno -= lines.length - 1;\n        }\n\n        var r = this.yylloc.range;\n        this.yylloc = {\n          first_line: this.yylloc.first_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n          this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n\n        this.yyleng = this.yytext.length;\n        return this;\n      },\n      // When called from action, caches matched text and appends it on next action\n      more: function () {\n        this._more = true;\n        return this;\n      },\n      // When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\n      reject: function () {\n        if (this.options.backtrack_lexer) {\n          this._backtrack = true;\n        } else {\n          return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n\n        return this;\n      },\n      // retain first n characters of the match\n      less: function (n) {\n        this.unput(this.match.slice(n));\n      },\n      // displays already matched input, i.e. for error messages\n      pastInput: function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n      },\n      // displays upcoming input, i.e. for error messages\n      upcomingInput: function () {\n        var next = this.match;\n\n        if (next.length < 20) {\n          next += this._input.substr(0, 20 - next.length);\n        }\n\n        return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n      },\n      // displays the character position where the lexing error occurred, i.e. for error messages\n      showPosition: function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n      },\n      // test the lexed token: return FALSE when not a match, otherwise return token\n      test_match: function (match, indexed_rule) {\n        var token, lines, backup;\n\n        if (this.options.backtrack_lexer) {\n          // save context\n          backup = {\n            yylineno: this.yylineno,\n            yylloc: {\n              first_line: this.yylloc.first_line,\n              last_line: this.last_line,\n              first_column: this.yylloc.first_column,\n              last_column: this.yylloc.last_column\n            },\n            yytext: this.yytext,\n            match: this.match,\n            matches: this.matches,\n            matched: this.matched,\n            yyleng: this.yyleng,\n            offset: this.offset,\n            _more: this._more,\n            _input: this._input,\n            yy: this.yy,\n            conditionStack: this.conditionStack.slice(0),\n            done: this.done\n          };\n\n          if (this.options.ranges) {\n            backup.yylloc.range = this.yylloc.range.slice(0);\n          }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n\n        if (lines) {\n          this.yylineno += lines.length;\n        }\n\n        this.yylloc = {\n          first_line: this.yylloc.last_line,\n          last_line: this.yylineno + 1,\n          first_column: this.yylloc.last_column,\n          last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n\n        if (this.options.ranges) {\n          this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n\n        if (this.done && this._input) {\n          this.done = false;\n        }\n\n        if (token) {\n          return token;\n        } else if (this._backtrack) {\n          // recover context\n          for (var k in backup) {\n            this[k] = backup[k];\n          }\n\n          return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n\n        return false;\n      },\n      // return next match in input\n      next: function () {\n        if (this.done) {\n          return this.EOF;\n        }\n\n        if (!this._input) {\n          this.done = true;\n        }\n\n        var token, match, tempMatch, index;\n\n        if (!this._more) {\n          this.yytext = '';\n          this.match = '';\n        }\n\n        var rules = this._currentRules();\n\n        for (var i = 0; i < rules.length; i++) {\n          tempMatch = this._input.match(this.rules[rules[i]]);\n\n          if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n            match = tempMatch;\n            index = i;\n\n            if (this.options.backtrack_lexer) {\n              token = this.test_match(tempMatch, rules[i]);\n\n              if (token !== false) {\n                return token;\n              } else if (this._backtrack) {\n                match = false;\n                continue; // rule action called reject() implying a rule MISmatch.\n              } else {\n                // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                return false;\n              }\n            } else if (!this.options.flex) {\n              break;\n            }\n          }\n        }\n\n        if (match) {\n          token = this.test_match(match, rules[index]);\n\n          if (token !== false) {\n            return token;\n          } // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n\n\n          return false;\n        }\n\n        if (this._input === \"\") {\n          return this.EOF;\n        } else {\n          return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n            text: \"\",\n            token: null,\n            line: this.yylineno\n          });\n        }\n      },\n      // return next match that has a token\n      lex: function lex() {\n        var r = this.next();\n\n        if (r) {\n          return r;\n        } else {\n          return this.lex();\n        }\n      },\n      // activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\n      begin: function begin(condition) {\n        this.conditionStack.push(condition);\n      },\n      // pop the previously active lexer condition state off the condition stack\n      popState: function popState() {\n        var n = this.conditionStack.length - 1;\n\n        if (n > 0) {\n          return this.conditionStack.pop();\n        } else {\n          return this.conditionStack[0];\n        }\n      },\n      // produce the lexer rule set which is active for the currently active lexer condition state\n      _currentRules: function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n          return this.conditions[\"INITIAL\"].rules;\n        }\n      },\n      // return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\n      topState: function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n\n        if (n >= 0) {\n          return this.conditionStack[n];\n        } else {\n          return \"INITIAL\";\n        }\n      },\n      // alias for begin(condition)\n      pushState: function pushState(condition) {\n        this.begin(condition);\n      },\n      // return the number of states currently on the stack\n      stateStackSize: function stateStackSize() {\n        return this.conditionStack.length;\n      },\n      options: {},\n      performAction: function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n        var YYSTATE = YY_START;\n\n        switch ($avoiding_name_collisions) {\n          case 0:\n            return 5;\n            break;\n\n          case 1:\n            /* skip whitespace */\n            break;\n\n          case 2:\n            return 8;\n            break;\n\n          case 3:\n            return 16;\n            break;\n\n          case 4:\n            return 17;\n            break;\n\n          case 5:\n            return 11;\n            break;\n\n          case 6:\n            return 10;\n            break;\n\n          case 7:\n            return 9;\n            break;\n\n          case 8:\n            return 14;\n            break;\n\n          case 9:\n            return 15;\n            break;\n\n          case 10:\n            return 12;\n            break;\n\n          case 11:\n            return 7;\n            break;\n\n          case 12:\n            return 7;\n            break;\n\n          case 13:\n            return 7;\n            break;\n\n          case 14:\n            return 7;\n            break;\n\n          case 15:\n            return 7;\n            break;\n\n          case 16:\n            return 7;\n            break;\n\n          case 17:\n            return 7;\n            break;\n\n          case 18:\n            return 7;\n            break;\n\n          case 19:\n            return 7;\n            break;\n\n          case 20:\n            return 7;\n            break;\n\n          case 21:\n            return 7;\n            break;\n\n          case 22:\n            return 7;\n            break;\n\n          case 23:\n            return 7;\n            break;\n\n          case 24:\n            return 13;\n            break;\n\n          case 25:\n            return 13;\n            break;\n\n          case 26:\n            return 13;\n            break;\n\n          case 27:\n            return 13;\n            break;\n\n          case 28:\n            return 13;\n            break;\n\n          case 29:\n            return 13;\n            break;\n\n          case 30:\n            return 13;\n            break;\n\n          case 31:\n            return 13;\n            break;\n\n          case 32:\n            return 7;\n            break;\n\n          case 33:\n            return 13;\n            break;\n\n          case 34:\n            return 7;\n            break;\n\n          case 35:\n            return 13;\n            break;\n\n          case 36:\n            return 7;\n            break;\n\n          case 37:\n            return 13;\n            break;\n\n          case 38:\n            return 13;\n            break;\n\n          case 39:\n            return 7;\n            break;\n\n          case 40:\n            return 13;\n            break;\n\n          case 41:\n            return 13;\n            break;\n\n          case 42:\n            return 13;\n            break;\n\n          case 43:\n            return 13;\n            break;\n\n          case 44:\n            return 13;\n            break;\n\n          case 45:\n            return 7;\n            break;\n\n          case 46:\n            return 13;\n            break;\n\n          case 47:\n            return 7;\n            break;\n\n          case 48:\n            return 7;\n            break;\n\n          case 49:\n            return 7;\n            break;\n\n          case 50:\n            return 7;\n            break;\n\n          case 51:\n            return 7;\n            break;\n\n          case 52:\n            return 7;\n            break;\n\n          case 53:\n            return 7;\n            break;\n\n          case 54:\n            return 7;\n            break;\n\n          case 55:\n            return 7;\n            break;\n\n          case 56:\n            return 7;\n            break;\n\n          case 57:\n            return 7;\n            break;\n\n          case 58:\n            return 7;\n            break;\n\n          case 59:\n            return 7;\n            break;\n\n          case 60:\n            return 7;\n            break;\n\n          case 61:\n            return 7;\n            break;\n\n          case 62:\n            return 7;\n            break;\n\n          case 63:\n            return 13;\n            break;\n\n          case 64:\n            return 7;\n            break;\n\n          case 65:\n            return 7;\n            break;\n\n          case 66:\n            return 13;\n            break;\n\n          case 67:\n            return 7;\n            break;\n\n          case 68:\n            return 7;\n            break;\n\n          case 69:\n            return 7;\n            break;\n\n          case 70:\n            return 7;\n            break;\n\n          case 71:\n            return 7;\n            break;\n\n          case 72:\n            return 7;\n            break;\n\n          case 73:\n            return 13;\n            break;\n\n          case 74:\n            return 7;\n            break;\n\n          case 75:\n            return 13;\n            break;\n\n          case 76:\n            return 7;\n            break;\n\n          case 77:\n            return 7;\n            break;\n\n          case 78:\n            return 7;\n            break;\n\n          case 79:\n            return 7;\n            break;\n\n          case 80:\n            return 7;\n            break;\n\n          case 81:\n            return 7;\n            break;\n\n          case 82:\n            return 7;\n            break;\n\n          case 83:\n            return 7;\n            break;\n\n          case 84:\n            return 7;\n            break;\n\n          case 85:\n            return 7;\n            break;\n\n          case 86:\n            return 7;\n            break;\n\n          case 87:\n            return 7;\n            break;\n\n          case 88:\n            return 7;\n            break;\n\n          case 89:\n            return 7;\n            break;\n\n          case 90:\n            return 7;\n            break;\n\n          case 91:\n            return 7;\n            break;\n\n          case 92:\n            return 7;\n            break;\n\n          case 93:\n            return 7;\n            break;\n\n          case 94:\n            return 7;\n            break;\n\n          case 95:\n            return 7;\n            break;\n\n          case 96:\n            return 7;\n            break;\n\n          case 97:\n            return 7;\n            break;\n\n          case 98:\n            return 7;\n            break;\n\n          case 99:\n            return 7;\n            break;\n\n          case 100:\n            return 7;\n            break;\n\n          case 101:\n            return 7;\n            break;\n\n          case 102:\n            return 7;\n            break;\n\n          case 103:\n            return 7;\n            break;\n\n          case 104:\n            return 7;\n            break;\n\n          case 105:\n            return 7;\n            break;\n\n          case 106:\n            return 7;\n            break;\n\n          case 107:\n            return 7;\n            break;\n\n          case 108:\n            return 7;\n            break;\n\n          case 109:\n            return 7;\n            break;\n\n          case 110:\n            return 7;\n            break;\n\n          case 111:\n            return 7;\n            break;\n\n          case 112:\n            return 7;\n            break;\n\n          case 113:\n            return 7;\n            break;\n\n          case 114:\n            return 7;\n            break;\n\n          case 115:\n            return 7;\n            break;\n\n          case 116:\n            return 7;\n            break;\n\n          case 117:\n            return 7;\n            break;\n\n          case 118:\n            return 7;\n            break;\n\n          case 119:\n            return 7;\n            break;\n\n          case 120:\n            return 7;\n            break;\n\n          case 121:\n            return 7;\n            break;\n\n          case 122:\n            return 7;\n            break;\n\n          case 123:\n            return 7;\n            break;\n\n          case 124:\n            return 7;\n            break;\n\n          case 125:\n            return 7;\n            break;\n\n          case 126:\n            return 7;\n            break;\n\n          case 127:\n            return 7;\n            break;\n\n          case 128:\n            return 7;\n            break;\n\n          case 129:\n            return 7;\n            break;\n\n          case 130:\n            return 7;\n            break;\n\n          case 131:\n            return 7;\n            break;\n\n          case 132:\n            return 7;\n            break;\n\n          case 133:\n            return 7;\n            break;\n\n          case 134:\n            return 7;\n            break;\n\n          case 135:\n            return 7;\n            break;\n\n          case 136:\n            return 7;\n            break;\n\n          case 137:\n            return 7;\n            break;\n\n          case 138:\n            return 7;\n            break;\n\n          case 139:\n            return 7;\n            break;\n\n          case 140:\n            return 7;\n            break;\n\n          case 141:\n            return 7;\n            break;\n\n          case 142:\n            return 7;\n            break;\n\n          case 143:\n            return 7;\n            break;\n\n          case 144:\n            return 7;\n            break;\n\n          case 145:\n            return 7;\n            break;\n\n          case 146:\n            return 7;\n            break;\n\n          case 147:\n            return 7;\n            break;\n\n          case 148:\n            return 7;\n            break;\n\n          case 149:\n            return 7;\n            break;\n\n          case 150:\n            return 7;\n            break;\n\n          case 151:\n            return 7;\n            break;\n\n          case 152:\n            return 7;\n            break;\n\n          case 153:\n            return 7;\n            break;\n\n          case 154:\n            return 7;\n            break;\n\n          case 155:\n            return 7;\n            break;\n\n          case 156:\n            return 7;\n            break;\n\n          case 157:\n            return 7;\n            break;\n\n          case 158:\n            return 7;\n            break;\n\n          case 159:\n            return 7;\n            break;\n\n          case 160:\n            return 7;\n            break;\n\n          case 161:\n            return 7;\n            break;\n\n          case 162:\n            return 7;\n            break;\n\n          case 163:\n            return 7;\n            break;\n\n          case 164:\n            return 7;\n            break;\n\n          case 165:\n            return 7;\n            break;\n\n          case 166:\n            return 7;\n            break;\n\n          case 167:\n            return 7;\n            break;\n\n          case 168:\n            return 7;\n            break;\n\n          case 169:\n            return 7;\n            break;\n\n          case 170:\n            return 7;\n            break;\n\n          case 171:\n            return 7;\n            break;\n\n          case 172:\n            return 7;\n            break;\n\n          case 173:\n            return 7;\n            break;\n\n          case 174:\n            return 7;\n            break;\n\n          case 175:\n            return 7;\n            break;\n\n          case 176:\n            return 7;\n            break;\n\n          case 177:\n            return 7;\n            break;\n\n          case 178:\n            return 7;\n            break;\n\n          case 179:\n            return 7;\n            break;\n\n          case 180:\n            return 7;\n            break;\n\n          case 181:\n            return 7;\n            break;\n\n          case 182:\n            return 7;\n            break;\n\n          case 183:\n            return 7;\n            break;\n\n          case 184:\n            return 7;\n            break;\n\n          case 185:\n            return 7;\n            break;\n\n          case 186:\n            return 7;\n            break;\n\n          case 187:\n            return 7;\n            break;\n\n          case 188:\n            return 7;\n            break;\n\n          case 189:\n            return 7;\n            break;\n\n          case 190:\n            return 7;\n            break;\n\n          case 191:\n            return 7;\n            break;\n\n          case 192:\n            return 7;\n            break;\n\n          case 193:\n            return 7;\n            break;\n\n          case 194:\n            return 7;\n            break;\n\n          case 195:\n            return 7;\n            break;\n\n          case 196:\n            return 7;\n            break;\n\n          case 197:\n            return 7;\n            break;\n\n          case 198:\n            return 7;\n            break;\n\n          case 199:\n            return 7;\n            break;\n\n          case 200:\n            return 7;\n            break;\n\n          case 201:\n            return 7;\n            break;\n\n          case 202:\n            return 7;\n            break;\n\n          case 203:\n            return 7;\n            break;\n\n          case 204:\n            return 7;\n            break;\n\n          case 205:\n            return 7;\n            break;\n\n          case 206:\n            return 7;\n            break;\n\n          case 207:\n            return 7;\n            break;\n\n          case 208:\n            return 7;\n            break;\n\n          case 209:\n            return 7;\n            break;\n\n          case 210:\n            return 7;\n            break;\n\n          case 211:\n            return 7;\n            break;\n\n          case 212:\n            return 7;\n            break;\n\n          case 213:\n            return 7;\n            break;\n\n          case 214:\n            return 7;\n            break;\n\n          case 215:\n            return 7;\n            break;\n\n          case 216:\n            return 7;\n            break;\n\n          case 217:\n            return 7;\n            break;\n\n          case 218:\n            return 7;\n            break;\n\n          case 219:\n            return 7;\n            break;\n\n          case 220:\n            return 7;\n            break;\n\n          case 221:\n            return 7;\n            break;\n\n          case 222:\n            return 7;\n            break;\n\n          case 223:\n            return 7;\n            break;\n\n          case 224:\n            return 7;\n            break;\n\n          case 225:\n            return 7;\n            break;\n\n          case 226:\n            return 7;\n            break;\n\n          case 227:\n            return 7;\n            break;\n\n          case 228:\n            return 7;\n            break;\n\n          case 229:\n            return 7;\n            break;\n\n          case 230:\n            return 7;\n            break;\n\n          case 231:\n            return 7;\n            break;\n\n          case 232:\n            return 7;\n            break;\n\n          case 233:\n            return 7;\n            break;\n\n          case 234:\n            return 7;\n            break;\n\n          case 235:\n            return 7;\n            break;\n\n          case 236:\n            return 7;\n            break;\n\n          case 237:\n            return 7;\n            break;\n\n          case 238:\n            return 7;\n            break;\n\n          case 239:\n            return 7;\n            break;\n\n          case 240:\n            return 7;\n            break;\n\n          case 241:\n            return 7;\n            break;\n\n          case 242:\n            return 7;\n            break;\n\n          case 243:\n            return 7;\n            break;\n\n          case 244:\n            return 7;\n            break;\n\n          case 245:\n            return 7;\n            break;\n\n          case 246:\n            return 7;\n            break;\n\n          case 247:\n            return 7;\n            break;\n\n          case 248:\n            return 7;\n            break;\n\n          case 249:\n            return 7;\n            break;\n\n          case 250:\n            return 7;\n            break;\n\n          case 251:\n            return 7;\n            break;\n\n          case 252:\n            return 7;\n            break;\n\n          case 253:\n            return 7;\n            break;\n\n          case 254:\n            return 7;\n            break;\n\n          case 255:\n            return 7;\n            break;\n\n          case 256:\n            return 7;\n            break;\n\n          case 257:\n            return 7;\n            break;\n\n          case 258:\n            return 7;\n            break;\n\n          case 259:\n            return 7;\n            break;\n\n          case 260:\n            return 7;\n            break;\n\n          case 261:\n            return 7;\n            break;\n\n          case 262:\n            return 7;\n            break;\n\n          case 263:\n            return 7;\n            break;\n\n          case 264:\n            return 7;\n            break;\n\n          case 265:\n            return 7;\n            break;\n\n          case 266:\n            return 7;\n            break;\n\n          case 267:\n            return 7;\n            break;\n\n          case 268:\n            return 7;\n            break;\n\n          case 269:\n            return 7;\n            break;\n\n          case 270:\n            return 7;\n            break;\n\n          case 271:\n            return 7;\n            break;\n\n          case 272:\n            return 7;\n            break;\n\n          case 273:\n            return 7;\n            break;\n\n          case 274:\n            return 7;\n            break;\n\n          case 275:\n            return 7;\n            break;\n\n          case 276:\n            return 7;\n            break;\n\n          case 277:\n            return 7;\n            break;\n\n          case 278:\n            return 7;\n            break;\n\n          case 279:\n            return 7;\n            break;\n\n          case 280:\n            return 7;\n            break;\n\n          case 281:\n            return 7;\n            break;\n\n          case 282:\n            return 7;\n            break;\n\n          case 283:\n            return 7;\n            break;\n\n          case 284:\n            return 7;\n            break;\n\n          case 285:\n            return 7;\n            break;\n\n          case 286:\n            return 7;\n            break;\n\n          case 287:\n            return 7;\n            break;\n\n          case 288:\n            return 7;\n            break;\n\n          case 289:\n            return 7;\n            break;\n\n          case 290:\n            return 7;\n            break;\n\n          case 291:\n            return 7;\n            break;\n\n          case 292:\n            return 7;\n            break;\n\n          case 293:\n            return 7;\n            break;\n\n          case 294:\n            return 7;\n            break;\n\n          case 295:\n            return 7;\n            break;\n\n          case 296:\n            return 7;\n            break;\n\n          case 297:\n            return 7;\n            break;\n\n          case 298:\n            return 7;\n            break;\n\n          case 299:\n            return 7;\n            break;\n\n          case 300:\n            return 7;\n            break;\n\n          case 301:\n            return 7;\n            break;\n\n          case 302:\n            return 7;\n            break;\n\n          case 303:\n            return 7;\n            break;\n\n          case 304:\n            return 7;\n            break;\n\n          case 305:\n            return 7;\n            break;\n\n          case 306:\n            return 7;\n            break;\n\n          case 307:\n            return 7;\n            break;\n\n          case 308:\n            return 7;\n            break;\n\n          case 309:\n            return 7;\n            break;\n\n          case 310:\n            return 7;\n            break;\n\n          case 311:\n            return 7;\n            break;\n\n          case 312:\n            return 7;\n            break;\n\n          case 313:\n            return 7;\n            break;\n\n          case 314:\n            return 7;\n            break;\n\n          case 315:\n            return 7;\n            break;\n\n          case 316:\n            return 7;\n            break;\n\n          case 317:\n            return 7;\n            break;\n\n          case 318:\n            return 7;\n            break;\n\n          case 319:\n            return 7;\n            break;\n\n          case 320:\n            return 7;\n            break;\n\n          case 321:\n            return 7;\n            break;\n\n          case 322:\n            return 7;\n            break;\n\n          case 323:\n            return 7;\n            break;\n\n          case 324:\n            return 7;\n            break;\n\n          case 325:\n            return 7;\n            break;\n\n          case 326:\n            return 7;\n            break;\n\n          case 327:\n            return 7;\n            break;\n\n          case 328:\n            return 7;\n            break;\n\n          case 329:\n            return 7;\n            break;\n\n          case 330:\n            return 7;\n            break;\n\n          case 331:\n            return 7;\n            break;\n\n          case 332:\n            return 7;\n            break;\n\n          case 333:\n            return 7;\n            break;\n\n          case 334:\n            return 7;\n            break;\n\n          case 335:\n            return 7;\n            break;\n\n          case 336:\n            return 7;\n            break;\n\n          case 337:\n            return 7;\n            break;\n\n          case 338:\n            return 7;\n            break;\n\n          case 339:\n            return 7;\n            break;\n\n          case 340:\n            return 7;\n            break;\n\n          case 341:\n            return 7;\n            break;\n\n          case 342:\n            return 7;\n            break;\n\n          case 343:\n            return 7;\n            break;\n\n          case 344:\n            return 7;\n            break;\n\n          case 345:\n            return 7;\n            break;\n\n          case 346:\n            return 7;\n            break;\n\n          case 347:\n            return 7;\n            break;\n\n          case 348:\n            return 7;\n            break;\n\n          case 349:\n            return 7;\n            break;\n\n          case 350:\n            return 7;\n            break;\n\n          case 351:\n            return 7;\n            break;\n\n          case 352:\n            return 7;\n            break;\n\n          case 353:\n            return 7;\n            break;\n\n          case 354:\n            return 7;\n            break;\n\n          case 355:\n            return 7;\n            break;\n\n          case 356:\n            return 7;\n            break;\n\n          case 357:\n            return 7;\n            break;\n\n          case 358:\n            return 7;\n            break;\n\n          case 359:\n            return 7;\n            break;\n\n          case 360:\n            return 7;\n            break;\n\n          case 361:\n            return 7;\n            break;\n\n          case 362:\n            return 7;\n            break;\n\n          case 363:\n            return 7;\n            break;\n\n          case 364:\n            return 7;\n            break;\n        }\n      },\n      rules: [/^(?:$)/, /^(?:\\s+)/, /^(?:\\+)/, /^(?:\\()/, /^(?:\\))/, /^(?::)/, /^(?:DocumentRef-([0-9A-Za-z-+.]+))/, /^(?:LicenseRef-([0-9A-Za-z-+.]+))/, /^(?:AND)/, /^(?:OR)/, /^(?:WITH)/, /^(?:BSD-3-Clause-No-Nuclear-License-2014)/, /^(?:BSD-3-Clause-No-Nuclear-Warranty)/, /^(?:GPL-2\\.0-with-classpath-exception)/, /^(?:GPL-3\\.0-with-autoconf-exception)/, /^(?:GPL-2\\.0-with-autoconf-exception)/, /^(?:BSD-3-Clause-No-Nuclear-License)/, /^(?:MPL-2\\.0-no-copyleft-exception)/, /^(?:GPL-2\\.0-with-bison-exception)/, /^(?:GPL-2\\.0-with-font-exception)/, /^(?:GPL-2\\.0-with-GCC-exception)/, /^(?:CNRI-Python-GPL-Compatible)/, /^(?:GPL-3\\.0-with-GCC-exception)/, /^(?:BSD-3-Clause-Attribution)/, /^(?:Classpath-exception-2\\.0)/, /^(?:WxWindows-exception-3\\.1)/, /^(?:freertos-exception-2\\.0)/, /^(?:Autoconf-exception-3\\.0)/, /^(?:i2p-gpl-java-exception)/, /^(?:gnu-javamail-exception)/, /^(?:Nokia-Qt-exception-1\\.1)/, /^(?:Autoconf-exception-2\\.0)/, /^(?:BSD-2-Clause-FreeBSD)/, /^(?:u-boot-exception-2\\.0)/, /^(?:zlib-acknowledgement)/, /^(?:Bison-exception-2\\.2)/, /^(?:BSD-2-Clause-NetBSD)/, /^(?:CLISP-exception-2\\.0)/, /^(?:eCos-exception-2\\.0)/, /^(?:BSD-3-Clause-Clear)/, /^(?:Font-exception-2\\.0)/, /^(?:FLTK-exception-2\\.0)/, /^(?:GCC-exception-2\\.0)/, /^(?:Qwt-exception-1\\.0)/, /^(?:Libtool-exception)/, /^(?:BSD-3-Clause-LBNL)/, /^(?:GCC-exception-3\\.1)/, /^(?:Artistic-1\\.0-Perl)/, /^(?:Artistic-1\\.0-cl8)/, /^(?:CC-BY-NC-SA-2\\.5)/, /^(?:MIT-advertising)/, /^(?:BSD-Source-Code)/, /^(?:CC-BY-NC-SA-4\\.0)/, /^(?:LiLiQ-Rplus-1\\.1)/, /^(?:CC-BY-NC-SA-3\\.0)/, /^(?:BSD-4-Clause-UC)/, /^(?:CC-BY-NC-SA-2\\.0)/, /^(?:CC-BY-NC-SA-1\\.0)/, /^(?:CC-BY-NC-ND-4\\.0)/, /^(?:CC-BY-NC-ND-3\\.0)/, /^(?:CC-BY-NC-ND-2\\.5)/, /^(?:CC-BY-NC-ND-2\\.0)/, /^(?:CC-BY-NC-ND-1\\.0)/, /^(?:LZMA-exception)/, /^(?:BitTorrent-1\\.1)/, /^(?:CrystalStacker)/, /^(?:FLTK-exception)/, /^(?:SugarCRM-1\\.1\\.3)/, /^(?:BSD-Protection)/, /^(?:BitTorrent-1\\.0)/, /^(?:HaskellReport)/, /^(?:Interbase-1\\.0)/, /^(?:StandardML-NJ)/, /^(?:mif-exception)/, /^(?:Frameworx-1\\.0)/, /^(?:389-exception)/, /^(?:CC-BY-NC-2\\.0)/, /^(?:CC-BY-NC-2\\.5)/, /^(?:CC-BY-NC-3\\.0)/, /^(?:CC-BY-NC-4\\.0)/, /^(?:W3C-19980720)/, /^(?:CC-BY-SA-1\\.0)/, /^(?:CC-BY-SA-2\\.0)/, /^(?:CC-BY-SA-2\\.5)/, /^(?:CC-BY-ND-2\\.0)/, /^(?:CC-BY-SA-4\\.0)/, /^(?:CC-BY-SA-3\\.0)/, /^(?:Artistic-1\\.0)/, /^(?:Artistic-2\\.0)/, /^(?:CC-BY-ND-2\\.5)/, /^(?:CC-BY-ND-3\\.0)/, /^(?:CC-BY-ND-4\\.0)/, /^(?:CC-BY-ND-1\\.0)/, /^(?:BSD-4-Clause)/, /^(?:BSD-3-Clause)/, /^(?:BSD-2-Clause)/, /^(?:CC-BY-NC-1\\.0)/, /^(?:bzip2-1\\.0\\.6)/, /^(?:Unicode-TOU)/, /^(?:CNRI-Jython)/, /^(?:ImageMagick)/, /^(?:Adobe-Glyph)/, /^(?:CUA-OPL-1\\.0)/, /^(?:OLDAP-2\\.2\\.2)/, /^(?:LiLiQ-R-1\\.1)/, /^(?:bzip2-1\\.0\\.5)/, /^(?:LiLiQ-P-1\\.1)/, /^(?:OLDAP-2\\.0\\.1)/, /^(?:OLDAP-2\\.2\\.1)/, /^(?:CNRI-Python)/, /^(?:XFree86-1\\.1)/, /^(?:OSET-PL-2\\.1)/, /^(?:Apache-2\\.0)/, /^(?:Watcom-1\\.0)/, /^(?:PostgreSQL)/, /^(?:Python-2\\.0)/, /^(?:RHeCos-1\\.1)/, /^(?:EUDatagrid)/, /^(?:Spencer-99)/, /^(?:Intel-ACPI)/, /^(?:CECILL-1\\.0)/, /^(?:CECILL-1\\.1)/, /^(?:JasPer-2\\.0)/, /^(?:CECILL-2\\.0)/, /^(?:CECILL-2\\.1)/, /^(?:gSOAP-1\\.3b)/, /^(?:Spencer-94)/, /^(?:Apache-1\\.1)/, /^(?:Spencer-86)/, /^(?:Apache-1\\.0)/, /^(?:ClArtistic)/, /^(?:TORQUE-1\\.1)/, /^(?:CATOSL-1\\.1)/, /^(?:Adobe-2006)/, /^(?:Zimbra-1\\.4)/, /^(?:Zimbra-1\\.3)/, /^(?:Condor-1\\.1)/, /^(?:CC-BY-3\\.0)/, /^(?:CC-BY-2\\.5)/, /^(?:OLDAP-2\\.4)/, /^(?:SGI-B-1\\.1)/, /^(?:SISSL-1\\.2)/, /^(?:SGI-B-1\\.0)/, /^(?:OLDAP-2\\.3)/, /^(?:CC-BY-4\\.0)/, /^(?:Crossword)/, /^(?:SimPL-2\\.0)/, /^(?:OLDAP-2\\.2)/, /^(?:OLDAP-2\\.1)/, /^(?:ErlPL-1\\.1)/, /^(?:LPPL-1\\.3a)/, /^(?:LPPL-1\\.3c)/, /^(?:OLDAP-2\\.0)/, /^(?:Leptonica)/, /^(?:CPOL-1\\.02)/, /^(?:OLDAP-1\\.4)/, /^(?:OLDAP-1\\.3)/, /^(?:CC-BY-2\\.0)/, /^(?:Unlicense)/, /^(?:OLDAP-2\\.8)/, /^(?:OLDAP-1\\.2)/, /^(?:MakeIndex)/, /^(?:OLDAP-2\\.7)/, /^(?:OLDAP-1\\.1)/, /^(?:Sleepycat)/, /^(?:D-FSL-1\\.0)/, /^(?:CC-BY-1\\.0)/, /^(?:OLDAP-2\\.6)/, /^(?:WXwindows)/, /^(?:NPOSL-3\\.0)/, /^(?:FreeImage)/, /^(?:SGI-B-2\\.0)/, /^(?:OLDAP-2\\.5)/, /^(?:Beerware)/, /^(?:Newsletr)/, /^(?:NBPL-1\\.0)/, /^(?:NASA-1\\.3)/, /^(?:NLOD-1\\.0)/, /^(?:AGPL-1\\.0)/, /^(?:OCLC-2\\.0)/, /^(?:ODbL-1\\.0)/, /^(?:PDDL-1\\.0)/, /^(?:Motosoto)/, /^(?:Afmparse)/, /^(?:ANTLR-PD)/, /^(?:LPL-1\\.02)/, /^(?:Abstyles)/, /^(?:eCos-2\\.0)/, /^(?:APSL-1\\.0)/, /^(?:LPPL-1\\.2)/, /^(?:LPPL-1\\.1)/, /^(?:LPPL-1\\.0)/, /^(?:APSL-1\\.1)/, /^(?:APSL-2\\.0)/, /^(?:Info-ZIP)/, /^(?:Zend-2\\.0)/, /^(?:IBM-pibs)/, /^(?:LGPL-2\\.0)/, /^(?:LGPL-3\\.0)/, /^(?:LGPL-2\\.1)/, /^(?:GFDL-1\\.3)/, /^(?:PHP-3\\.01)/, /^(?:GFDL-1\\.2)/, /^(?:GFDL-1\\.1)/, /^(?:AGPL-3\\.0)/, /^(?:Giftware)/, /^(?:EUPL-1\\.1)/, /^(?:RPSL-1\\.0)/, /^(?:EUPL-1\\.0)/, /^(?:MIT-enna)/, /^(?:CECILL-B)/, /^(?:diffmark)/, /^(?:CECILL-C)/, /^(?:CDDL-1\\.0)/, /^(?:Sendmail)/, /^(?:CDDL-1\\.1)/, /^(?:CPAL-1\\.0)/, /^(?:APSL-1\\.2)/, /^(?:NPL-1\\.1)/, /^(?:AFL-1\\.2)/, /^(?:Caldera)/, /^(?:AFL-2\\.0)/, /^(?:FSFULLR)/, /^(?:AFL-2\\.1)/, /^(?:VSL-1\\.0)/, /^(?:VOSTROM)/, /^(?:UPL-1\\.0)/, /^(?:Dotseqn)/, /^(?:CPL-1\\.0)/, /^(?:dvipdfm)/, /^(?:EPL-1\\.0)/, /^(?:OCCT-PL)/, /^(?:ECL-1\\.0)/, /^(?:Latex2e)/, /^(?:ECL-2\\.0)/, /^(?:GPL-1\\.0)/, /^(?:GPL-2\\.0)/, /^(?:GPL-3\\.0)/, /^(?:AFL-3\\.0)/, /^(?:LAL-1\\.2)/, /^(?:LAL-1\\.3)/, /^(?:EFL-1\\.0)/, /^(?:EFL-2\\.0)/, /^(?:gnuplot)/, /^(?:Aladdin)/, /^(?:LPL-1\\.0)/, /^(?:libtiff)/, /^(?:Entessa)/, /^(?:AMDPLPA)/, /^(?:IPL-1\\.0)/, /^(?:OPL-1\\.0)/, /^(?:OSL-1\\.0)/, /^(?:OSL-1\\.1)/, /^(?:OSL-2\\.0)/, /^(?:OSL-2\\.1)/, /^(?:OSL-3\\.0)/, /^(?:OpenSSL)/, /^(?:ZPL-2\\.1)/, /^(?:PHP-3\\.0)/, /^(?:ZPL-2\\.0)/, /^(?:ZPL-1\\.1)/, /^(?:CC0-1\\.0)/, /^(?:SPL-1\\.0)/, /^(?:psutils)/, /^(?:MPL-1\\.0)/, /^(?:QPL-1\\.0)/, /^(?:MPL-1\\.1)/, /^(?:MPL-2\\.0)/, /^(?:APL-1\\.0)/, /^(?:RPL-1\\.1)/, /^(?:RPL-1\\.5)/, /^(?:MIT-CMU)/, /^(?:Multics)/, /^(?:Eurosym)/, /^(?:BSL-1\\.0)/, /^(?:MIT-feh)/, /^(?:Saxpath)/, /^(?:Borceux)/, /^(?:OFL-1\\.1)/, /^(?:OFL-1\\.0)/, /^(?:AFL-1\\.1)/, /^(?:YPL-1\\.1)/, /^(?:YPL-1\\.0)/, /^(?:NPL-1\\.0)/, /^(?:iMatix)/, /^(?:mpich2)/, /^(?:APAFML)/, /^(?:Bahyph)/, /^(?:RSA-MD)/, /^(?:psfrag)/, /^(?:Plexus)/, /^(?:eGenix)/, /^(?:Glulxe)/, /^(?:SAX-PD)/, /^(?:Imlib2)/, /^(?:Wsuipa)/, /^(?:LGPLLR)/, /^(?:Libpng)/, /^(?:xinetd)/, /^(?:MITNFA)/, /^(?:NetCDF)/, /^(?:Naumen)/, /^(?:SMPPL)/, /^(?:Nunit)/, /^(?:FSFUL)/, /^(?:GL2PS)/, /^(?:SMLNJ)/, /^(?:Rdisc)/, /^(?:Noweb)/, /^(?:Nokia)/, /^(?:SISSL)/, /^(?:Qhull)/, /^(?:Intel)/, /^(?:Glide)/, /^(?:Xerox)/, /^(?:AMPAS)/, /^(?:WTFPL)/, /^(?:MS-PL)/, /^(?:XSkat)/, /^(?:MS-RL)/, /^(?:MirOS)/, /^(?:RSCPL)/, /^(?:TMate)/, /^(?:OGTSL)/, /^(?:FSFAP)/, /^(?:NCSA)/, /^(?:Zlib)/, /^(?:SCEA)/, /^(?:SNIA)/, /^(?:NGPL)/, /^(?:NOSL)/, /^(?:ADSL)/, /^(?:MTLL)/, /^(?:NLPL)/, /^(?:Ruby)/, /^(?:JSON)/, /^(?:Barr)/, /^(?:0BSD)/, /^(?:Xnet)/, /^(?:Cube)/, /^(?:curl)/, /^(?:DSDP)/, /^(?:Fair)/, /^(?:HPND)/, /^(?:TOSL)/, /^(?:IJG)/, /^(?:SWL)/, /^(?:Vim)/, /^(?:FTL)/, /^(?:ICU)/, /^(?:OML)/, /^(?:NRL)/, /^(?:DOC)/, /^(?:TCL)/, /^(?:W3C)/, /^(?:NTP)/, /^(?:IPA)/, /^(?:ISC)/, /^(?:X11)/, /^(?:AAL)/, /^(?:AML)/, /^(?:xpp)/, /^(?:Zed)/, /^(?:MIT)/, /^(?:Mup)/],\n      conditions: {\n        \"INITIAL\": {\n          \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364],\n          \"inclusive\": true\n        }\n      }\n    };\n    return lexer;\n  }();\n\n  parser.lexer = lexer;\n\n  function Parser() {\n    this.yy = {};\n  }\n\n  Parser.prototype = parser;\n  parser.Parser = Parser;\n  return new Parser();\n}();\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n  exports.parser = spdxparse;\n  exports.Parser = spdxparse.Parser;\n\n  exports.parse = function () {\n    return spdxparse.parse.apply(spdxparse, arguments);\n  };\n\n  exports.main = function commonjsMain(args) {\n    if (!args[1]) {\n      console.log('Usage: ' + args[0] + ' FILE');\n      process.exit(1);\n    }\n\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n\n    return exports.parser.parse(source);\n  };\n\n  if (typeof module !== 'undefined' && require.main === module) {\n    exports.main(process.argv.slice(1));\n  }\n}","map":{"version":3,"sources":["C:/Users/Hp/node_modules/npx/node_modules/spdx-expression-parse/parser.js"],"names":["spdxparse","o","k","v","l","length","$V0","$V1","$V2","$V3","$V4","$V5","$V6","$V7","parser","trace","yy","symbols_","terminals_","productions_","performAction","anonymous","yytext","yyleng","yylineno","yystate","$$","_$","$0","$","license","plus","exception","hasOwnProperty","conjunction","left","right","table","defaultActions","parseError","str","hash","recoverable","_parseError","msg","message","prototype","Error","parse","input","self","stack","tstack","vstack","lstack","recovering","TERROR","EOF","args","slice","call","arguments","lexer","Object","create","sharedState","setInput","yylloc","yyloc","push","ranges","options","getPrototypeOf","popStack","n","_token_stack","lex","token","symbol","preErrorSymbol","state","action","a","r","yyval","p","len","newState","expected","errStr","showPosition","join","text","match","line","loc","Array","first_line","last_line","first_column","last_column","range","apply","concat","_input","_more","_backtrack","done","matched","conditionStack","offset","ch","lines","unput","split","substr","oldLines","more","reject","backtrack_lexer","less","pastInput","past","replace","upcomingInput","next","pre","c","test_match","indexed_rule","backup","matches","tempMatch","index","rules","_currentRules","i","flex","begin","condition","popState","pop","conditions","topState","Math","abs","pushState","stateStackSize","yy_","$avoiding_name_collisions","YY_START","YYSTATE","Parser","require","exports","main","commonjsMain","console","log","process","exit","source","readFileSync","normalize","module","argv"],"mappings":"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,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;AACA,eAAK,GAAL;AAAS,mBAAO,CAAP;AACT;;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","sourcesContent":["/* parser generated by jison 0.4.17 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar spdxparse = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,5],$V1=[1,6],$V2=[1,7],$V3=[1,4],$V4=[1,9],$V5=[1,10],$V6=[5,14,15,17],$V7=[5,12,14,15,17];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"start\":3,\"expression\":4,\"EOS\":5,\"simpleExpression\":6,\"LICENSE\":7,\"PLUS\":8,\"LICENSEREF\":9,\"DOCUMENTREF\":10,\"COLON\":11,\"WITH\":12,\"EXCEPTION\":13,\"AND\":14,\"OR\":15,\"OPEN\":16,\"CLOSE\":17,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOS\",7:\"LICENSE\",8:\"PLUS\",9:\"LICENSEREF\",10:\"DOCUMENTREF\",11:\"COLON\",12:\"WITH\",13:\"EXCEPTION\",14:\"AND\",15:\"OR\",16:\"OPEN\",17:\"CLOSE\"},\nproductions_: [0,[3,2],[6,1],[6,2],[6,1],[6,3],[4,1],[4,3],[4,3],[4,3],[4,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn this.$ = $$[$0-1]\nbreak;\ncase 2: case 4: case 5:\nthis.$ = {license: yytext}\nbreak;\ncase 3:\nthis.$ = {license: $$[$0-1], plus: true}\nbreak;\ncase 6:\nthis.$ = $$[$0]\nbreak;\ncase 7:\nthis.$ = {exception: $$[$0]}\nthis.$.license = $$[$0-2].license\nif ($$[$0-2].hasOwnProperty('plus')) {\n  this.$.plus = $$[$0-2].plus\n}\nbreak;\ncase 8:\nthis.$ = {conjunction: 'and', left: $$[$0-2], right: $$[$0]}\nbreak;\ncase 9:\nthis.$ = {conjunction: 'or', left: $$[$0-2], right: $$[$0]}\nbreak;\ncase 10:\nthis.$ = $$[$0-1]\nbreak;\n}\n},\ntable: [{3:1,4:2,6:3,7:$V0,9:$V1,10:$V2,16:$V3},{1:[3]},{5:[1,8],14:$V4,15:$V5},o($V6,[2,6],{12:[1,11]}),{4:12,6:3,7:$V0,9:$V1,10:$V2,16:$V3},o($V7,[2,2],{8:[1,13]}),o($V7,[2,4]),{11:[1,14]},{1:[2,1]},{4:15,6:3,7:$V0,9:$V1,10:$V2,16:$V3},{4:16,6:3,7:$V0,9:$V1,10:$V2,16:$V3},{13:[1,17]},{14:$V4,15:$V5,17:[1,18]},o($V7,[2,3]),{9:[1,19]},o($V6,[2,8]),o([5,15,17],[2,9],{14:$V4}),o($V6,[2,7]),o($V6,[2,10]),o($V7,[2,5])],\ndefaultActions: {8:[2,1]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        function _parseError (msg, hash) {\n            this.message = msg;\n            this.hash = hash;\n        }\n        _parseError.prototype = Error;\n\n        throw new _parseError(str, hash);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 5\nbreak;\ncase 1:/* skip whitespace */\nbreak;\ncase 2:return 8\nbreak;\ncase 3:return 16\nbreak;\ncase 4:return 17\nbreak;\ncase 5:return 11\nbreak;\ncase 6:return 10\nbreak;\ncase 7:return 9\nbreak;\ncase 8:return 14\nbreak;\ncase 9:return 15\nbreak;\ncase 10:return 12\nbreak;\ncase 11:return 7\nbreak;\ncase 12:return 7\nbreak;\ncase 13:return 7\nbreak;\ncase 14:return 7\nbreak;\ncase 15:return 7\nbreak;\ncase 16:return 7\nbreak;\ncase 17:return 7\nbreak;\ncase 18:return 7\nbreak;\ncase 19:return 7\nbreak;\ncase 20:return 7\nbreak;\ncase 21:return 7\nbreak;\ncase 22:return 7\nbreak;\ncase 23:return 7\nbreak;\ncase 24:return 13\nbreak;\ncase 25:return 13\nbreak;\ncase 26:return 13\nbreak;\ncase 27:return 13\nbreak;\ncase 28:return 13\nbreak;\ncase 29:return 13\nbreak;\ncase 30:return 13\nbreak;\ncase 31:return 13\nbreak;\ncase 32:return 7\nbreak;\ncase 33:return 13\nbreak;\ncase 34:return 7\nbreak;\ncase 35:return 13\nbreak;\ncase 36:return 7\nbreak;\ncase 37:return 13\nbreak;\ncase 38:return 13\nbreak;\ncase 39:return 7\nbreak;\ncase 40:return 13\nbreak;\ncase 41:return 13\nbreak;\ncase 42:return 13\nbreak;\ncase 43:return 13\nbreak;\ncase 44:return 13\nbreak;\ncase 45:return 7\nbreak;\ncase 46:return 13\nbreak;\ncase 47:return 7\nbreak;\ncase 48:return 7\nbreak;\ncase 49:return 7\nbreak;\ncase 50:return 7\nbreak;\ncase 51:return 7\nbreak;\ncase 52:return 7\nbreak;\ncase 53:return 7\nbreak;\ncase 54:return 7\nbreak;\ncase 55:return 7\nbreak;\ncase 56:return 7\nbreak;\ncase 57:return 7\nbreak;\ncase 58:return 7\nbreak;\ncase 59:return 7\nbreak;\ncase 60:return 7\nbreak;\ncase 61:return 7\nbreak;\ncase 62:return 7\nbreak;\ncase 63:return 13\nbreak;\ncase 64:return 7\nbreak;\ncase 65:return 7\nbreak;\ncase 66:return 13\nbreak;\ncase 67:return 7\nbreak;\ncase 68:return 7\nbreak;\ncase 69:return 7\nbreak;\ncase 70:return 7\nbreak;\ncase 71:return 7\nbreak;\ncase 72:return 7\nbreak;\ncase 73:return 13\nbreak;\ncase 74:return 7\nbreak;\ncase 75:return 13\nbreak;\ncase 76:return 7\nbreak;\ncase 77:return 7\nbreak;\ncase 78:return 7\nbreak;\ncase 79:return 7\nbreak;\ncase 80:return 7\nbreak;\ncase 81:return 7\nbreak;\ncase 82:return 7\nbreak;\ncase 83:return 7\nbreak;\ncase 84:return 7\nbreak;\ncase 85:return 7\nbreak;\ncase 86:return 7\nbreak;\ncase 87:return 7\nbreak;\ncase 88:return 7\nbreak;\ncase 89:return 7\nbreak;\ncase 90:return 7\nbreak;\ncase 91:return 7\nbreak;\ncase 92:return 7\nbreak;\ncase 93:return 7\nbreak;\ncase 94:return 7\nbreak;\ncase 95:return 7\nbreak;\ncase 96:return 7\nbreak;\ncase 97:return 7\nbreak;\ncase 98:return 7\nbreak;\ncase 99:return 7\nbreak;\ncase 100:return 7\nbreak;\ncase 101:return 7\nbreak;\ncase 102:return 7\nbreak;\ncase 103:return 7\nbreak;\ncase 104:return 7\nbreak;\ncase 105:return 7\nbreak;\ncase 106:return 7\nbreak;\ncase 107:return 7\nbreak;\ncase 108:return 7\nbreak;\ncase 109:return 7\nbreak;\ncase 110:return 7\nbreak;\ncase 111:return 7\nbreak;\ncase 112:return 7\nbreak;\ncase 113:return 7\nbreak;\ncase 114:return 7\nbreak;\ncase 115:return 7\nbreak;\ncase 116:return 7\nbreak;\ncase 117:return 7\nbreak;\ncase 118:return 7\nbreak;\ncase 119:return 7\nbreak;\ncase 120:return 7\nbreak;\ncase 121:return 7\nbreak;\ncase 122:return 7\nbreak;\ncase 123:return 7\nbreak;\ncase 124:return 7\nbreak;\ncase 125:return 7\nbreak;\ncase 126:return 7\nbreak;\ncase 127:return 7\nbreak;\ncase 128:return 7\nbreak;\ncase 129:return 7\nbreak;\ncase 130:return 7\nbreak;\ncase 131:return 7\nbreak;\ncase 132:return 7\nbreak;\ncase 133:return 7\nbreak;\ncase 134:return 7\nbreak;\ncase 135:return 7\nbreak;\ncase 136:return 7\nbreak;\ncase 137:return 7\nbreak;\ncase 138:return 7\nbreak;\ncase 139:return 7\nbreak;\ncase 140:return 7\nbreak;\ncase 141:return 7\nbreak;\ncase 142:return 7\nbreak;\ncase 143:return 7\nbreak;\ncase 144:return 7\nbreak;\ncase 145:return 7\nbreak;\ncase 146:return 7\nbreak;\ncase 147:return 7\nbreak;\ncase 148:return 7\nbreak;\ncase 149:return 7\nbreak;\ncase 150:return 7\nbreak;\ncase 151:return 7\nbreak;\ncase 152:return 7\nbreak;\ncase 153:return 7\nbreak;\ncase 154:return 7\nbreak;\ncase 155:return 7\nbreak;\ncase 156:return 7\nbreak;\ncase 157:return 7\nbreak;\ncase 158:return 7\nbreak;\ncase 159:return 7\nbreak;\ncase 160:return 7\nbreak;\ncase 161:return 7\nbreak;\ncase 162:return 7\nbreak;\ncase 163:return 7\nbreak;\ncase 164:return 7\nbreak;\ncase 165:return 7\nbreak;\ncase 166:return 7\nbreak;\ncase 167:return 7\nbreak;\ncase 168:return 7\nbreak;\ncase 169:return 7\nbreak;\ncase 170:return 7\nbreak;\ncase 171:return 7\nbreak;\ncase 172:return 7\nbreak;\ncase 173:return 7\nbreak;\ncase 174:return 7\nbreak;\ncase 175:return 7\nbreak;\ncase 176:return 7\nbreak;\ncase 177:return 7\nbreak;\ncase 178:return 7\nbreak;\ncase 179:return 7\nbreak;\ncase 180:return 7\nbreak;\ncase 181:return 7\nbreak;\ncase 182:return 7\nbreak;\ncase 183:return 7\nbreak;\ncase 184:return 7\nbreak;\ncase 185:return 7\nbreak;\ncase 186:return 7\nbreak;\ncase 187:return 7\nbreak;\ncase 188:return 7\nbreak;\ncase 189:return 7\nbreak;\ncase 190:return 7\nbreak;\ncase 191:return 7\nbreak;\ncase 192:return 7\nbreak;\ncase 193:return 7\nbreak;\ncase 194:return 7\nbreak;\ncase 195:return 7\nbreak;\ncase 196:return 7\nbreak;\ncase 197:return 7\nbreak;\ncase 198:return 7\nbreak;\ncase 199:return 7\nbreak;\ncase 200:return 7\nbreak;\ncase 201:return 7\nbreak;\ncase 202:return 7\nbreak;\ncase 203:return 7\nbreak;\ncase 204:return 7\nbreak;\ncase 205:return 7\nbreak;\ncase 206:return 7\nbreak;\ncase 207:return 7\nbreak;\ncase 208:return 7\nbreak;\ncase 209:return 7\nbreak;\ncase 210:return 7\nbreak;\ncase 211:return 7\nbreak;\ncase 212:return 7\nbreak;\ncase 213:return 7\nbreak;\ncase 214:return 7\nbreak;\ncase 215:return 7\nbreak;\ncase 216:return 7\nbreak;\ncase 217:return 7\nbreak;\ncase 218:return 7\nbreak;\ncase 219:return 7\nbreak;\ncase 220:return 7\nbreak;\ncase 221:return 7\nbreak;\ncase 222:return 7\nbreak;\ncase 223:return 7\nbreak;\ncase 224:return 7\nbreak;\ncase 225:return 7\nbreak;\ncase 226:return 7\nbreak;\ncase 227:return 7\nbreak;\ncase 228:return 7\nbreak;\ncase 229:return 7\nbreak;\ncase 230:return 7\nbreak;\ncase 231:return 7\nbreak;\ncase 232:return 7\nbreak;\ncase 233:return 7\nbreak;\ncase 234:return 7\nbreak;\ncase 235:return 7\nbreak;\ncase 236:return 7\nbreak;\ncase 237:return 7\nbreak;\ncase 238:return 7\nbreak;\ncase 239:return 7\nbreak;\ncase 240:return 7\nbreak;\ncase 241:return 7\nbreak;\ncase 242:return 7\nbreak;\ncase 243:return 7\nbreak;\ncase 244:return 7\nbreak;\ncase 245:return 7\nbreak;\ncase 246:return 7\nbreak;\ncase 247:return 7\nbreak;\ncase 248:return 7\nbreak;\ncase 249:return 7\nbreak;\ncase 250:return 7\nbreak;\ncase 251:return 7\nbreak;\ncase 252:return 7\nbreak;\ncase 253:return 7\nbreak;\ncase 254:return 7\nbreak;\ncase 255:return 7\nbreak;\ncase 256:return 7\nbreak;\ncase 257:return 7\nbreak;\ncase 258:return 7\nbreak;\ncase 259:return 7\nbreak;\ncase 260:return 7\nbreak;\ncase 261:return 7\nbreak;\ncase 262:return 7\nbreak;\ncase 263:return 7\nbreak;\ncase 264:return 7\nbreak;\ncase 265:return 7\nbreak;\ncase 266:return 7\nbreak;\ncase 267:return 7\nbreak;\ncase 268:return 7\nbreak;\ncase 269:return 7\nbreak;\ncase 270:return 7\nbreak;\ncase 271:return 7\nbreak;\ncase 272:return 7\nbreak;\ncase 273:return 7\nbreak;\ncase 274:return 7\nbreak;\ncase 275:return 7\nbreak;\ncase 276:return 7\nbreak;\ncase 277:return 7\nbreak;\ncase 278:return 7\nbreak;\ncase 279:return 7\nbreak;\ncase 280:return 7\nbreak;\ncase 281:return 7\nbreak;\ncase 282:return 7\nbreak;\ncase 283:return 7\nbreak;\ncase 284:return 7\nbreak;\ncase 285:return 7\nbreak;\ncase 286:return 7\nbreak;\ncase 287:return 7\nbreak;\ncase 288:return 7\nbreak;\ncase 289:return 7\nbreak;\ncase 290:return 7\nbreak;\ncase 291:return 7\nbreak;\ncase 292:return 7\nbreak;\ncase 293:return 7\nbreak;\ncase 294:return 7\nbreak;\ncase 295:return 7\nbreak;\ncase 296:return 7\nbreak;\ncase 297:return 7\nbreak;\ncase 298:return 7\nbreak;\ncase 299:return 7\nbreak;\ncase 300:return 7\nbreak;\ncase 301:return 7\nbreak;\ncase 302:return 7\nbreak;\ncase 303:return 7\nbreak;\ncase 304:return 7\nbreak;\ncase 305:return 7\nbreak;\ncase 306:return 7\nbreak;\ncase 307:return 7\nbreak;\ncase 308:return 7\nbreak;\ncase 309:return 7\nbreak;\ncase 310:return 7\nbreak;\ncase 311:return 7\nbreak;\ncase 312:return 7\nbreak;\ncase 313:return 7\nbreak;\ncase 314:return 7\nbreak;\ncase 315:return 7\nbreak;\ncase 316:return 7\nbreak;\ncase 317:return 7\nbreak;\ncase 318:return 7\nbreak;\ncase 319:return 7\nbreak;\ncase 320:return 7\nbreak;\ncase 321:return 7\nbreak;\ncase 322:return 7\nbreak;\ncase 323:return 7\nbreak;\ncase 324:return 7\nbreak;\ncase 325:return 7\nbreak;\ncase 326:return 7\nbreak;\ncase 327:return 7\nbreak;\ncase 328:return 7\nbreak;\ncase 329:return 7\nbreak;\ncase 330:return 7\nbreak;\ncase 331:return 7\nbreak;\ncase 332:return 7\nbreak;\ncase 333:return 7\nbreak;\ncase 334:return 7\nbreak;\ncase 335:return 7\nbreak;\ncase 336:return 7\nbreak;\ncase 337:return 7\nbreak;\ncase 338:return 7\nbreak;\ncase 339:return 7\nbreak;\ncase 340:return 7\nbreak;\ncase 341:return 7\nbreak;\ncase 342:return 7\nbreak;\ncase 343:return 7\nbreak;\ncase 344:return 7\nbreak;\ncase 345:return 7\nbreak;\ncase 346:return 7\nbreak;\ncase 347:return 7\nbreak;\ncase 348:return 7\nbreak;\ncase 349:return 7\nbreak;\ncase 350:return 7\nbreak;\ncase 351:return 7\nbreak;\ncase 352:return 7\nbreak;\ncase 353:return 7\nbreak;\ncase 354:return 7\nbreak;\ncase 355:return 7\nbreak;\ncase 356:return 7\nbreak;\ncase 357:return 7\nbreak;\ncase 358:return 7\nbreak;\ncase 359:return 7\nbreak;\ncase 360:return 7\nbreak;\ncase 361:return 7\nbreak;\ncase 362:return 7\nbreak;\ncase 363:return 7\nbreak;\ncase 364:return 7\nbreak;\n}\n},\nrules: [/^(?:$)/,/^(?:\\s+)/,/^(?:\\+)/,/^(?:\\()/,/^(?:\\))/,/^(?::)/,/^(?:DocumentRef-([0-9A-Za-z-+.]+))/,/^(?:LicenseRef-([0-9A-Za-z-+.]+))/,/^(?:AND)/,/^(?:OR)/,/^(?:WITH)/,/^(?:BSD-3-Clause-No-Nuclear-License-2014)/,/^(?:BSD-3-Clause-No-Nuclear-Warranty)/,/^(?:GPL-2\\.0-with-classpath-exception)/,/^(?:GPL-3\\.0-with-autoconf-exception)/,/^(?:GPL-2\\.0-with-autoconf-exception)/,/^(?:BSD-3-Clause-No-Nuclear-License)/,/^(?:MPL-2\\.0-no-copyleft-exception)/,/^(?:GPL-2\\.0-with-bison-exception)/,/^(?:GPL-2\\.0-with-font-exception)/,/^(?:GPL-2\\.0-with-GCC-exception)/,/^(?:CNRI-Python-GPL-Compatible)/,/^(?:GPL-3\\.0-with-GCC-exception)/,/^(?:BSD-3-Clause-Attribution)/,/^(?:Classpath-exception-2\\.0)/,/^(?:WxWindows-exception-3\\.1)/,/^(?:freertos-exception-2\\.0)/,/^(?:Autoconf-exception-3\\.0)/,/^(?:i2p-gpl-java-exception)/,/^(?:gnu-javamail-exception)/,/^(?:Nokia-Qt-exception-1\\.1)/,/^(?:Autoconf-exception-2\\.0)/,/^(?:BSD-2-Clause-FreeBSD)/,/^(?:u-boot-exception-2\\.0)/,/^(?:zlib-acknowledgement)/,/^(?:Bison-exception-2\\.2)/,/^(?:BSD-2-Clause-NetBSD)/,/^(?:CLISP-exception-2\\.0)/,/^(?:eCos-exception-2\\.0)/,/^(?:BSD-3-Clause-Clear)/,/^(?:Font-exception-2\\.0)/,/^(?:FLTK-exception-2\\.0)/,/^(?:GCC-exception-2\\.0)/,/^(?:Qwt-exception-1\\.0)/,/^(?:Libtool-exception)/,/^(?:BSD-3-Clause-LBNL)/,/^(?:GCC-exception-3\\.1)/,/^(?:Artistic-1\\.0-Perl)/,/^(?:Artistic-1\\.0-cl8)/,/^(?:CC-BY-NC-SA-2\\.5)/,/^(?:MIT-advertising)/,/^(?:BSD-Source-Code)/,/^(?:CC-BY-NC-SA-4\\.0)/,/^(?:LiLiQ-Rplus-1\\.1)/,/^(?:CC-BY-NC-SA-3\\.0)/,/^(?:BSD-4-Clause-UC)/,/^(?:CC-BY-NC-SA-2\\.0)/,/^(?:CC-BY-NC-SA-1\\.0)/,/^(?:CC-BY-NC-ND-4\\.0)/,/^(?:CC-BY-NC-ND-3\\.0)/,/^(?:CC-BY-NC-ND-2\\.5)/,/^(?:CC-BY-NC-ND-2\\.0)/,/^(?:CC-BY-NC-ND-1\\.0)/,/^(?:LZMA-exception)/,/^(?:BitTorrent-1\\.1)/,/^(?:CrystalStacker)/,/^(?:FLTK-exception)/,/^(?:SugarCRM-1\\.1\\.3)/,/^(?:BSD-Protection)/,/^(?:BitTorrent-1\\.0)/,/^(?:HaskellReport)/,/^(?:Interbase-1\\.0)/,/^(?:StandardML-NJ)/,/^(?:mif-exception)/,/^(?:Frameworx-1\\.0)/,/^(?:389-exception)/,/^(?:CC-BY-NC-2\\.0)/,/^(?:CC-BY-NC-2\\.5)/,/^(?:CC-BY-NC-3\\.0)/,/^(?:CC-BY-NC-4\\.0)/,/^(?:W3C-19980720)/,/^(?:CC-BY-SA-1\\.0)/,/^(?:CC-BY-SA-2\\.0)/,/^(?:CC-BY-SA-2\\.5)/,/^(?:CC-BY-ND-2\\.0)/,/^(?:CC-BY-SA-4\\.0)/,/^(?:CC-BY-SA-3\\.0)/,/^(?:Artistic-1\\.0)/,/^(?:Artistic-2\\.0)/,/^(?:CC-BY-ND-2\\.5)/,/^(?:CC-BY-ND-3\\.0)/,/^(?:CC-BY-ND-4\\.0)/,/^(?:CC-BY-ND-1\\.0)/,/^(?:BSD-4-Clause)/,/^(?:BSD-3-Clause)/,/^(?:BSD-2-Clause)/,/^(?:CC-BY-NC-1\\.0)/,/^(?:bzip2-1\\.0\\.6)/,/^(?:Unicode-TOU)/,/^(?:CNRI-Jython)/,/^(?:ImageMagick)/,/^(?:Adobe-Glyph)/,/^(?:CUA-OPL-1\\.0)/,/^(?:OLDAP-2\\.2\\.2)/,/^(?:LiLiQ-R-1\\.1)/,/^(?:bzip2-1\\.0\\.5)/,/^(?:LiLiQ-P-1\\.1)/,/^(?:OLDAP-2\\.0\\.1)/,/^(?:OLDAP-2\\.2\\.1)/,/^(?:CNRI-Python)/,/^(?:XFree86-1\\.1)/,/^(?:OSET-PL-2\\.1)/,/^(?:Apache-2\\.0)/,/^(?:Watcom-1\\.0)/,/^(?:PostgreSQL)/,/^(?:Python-2\\.0)/,/^(?:RHeCos-1\\.1)/,/^(?:EUDatagrid)/,/^(?:Spencer-99)/,/^(?:Intel-ACPI)/,/^(?:CECILL-1\\.0)/,/^(?:CECILL-1\\.1)/,/^(?:JasPer-2\\.0)/,/^(?:CECILL-2\\.0)/,/^(?:CECILL-2\\.1)/,/^(?:gSOAP-1\\.3b)/,/^(?:Spencer-94)/,/^(?:Apache-1\\.1)/,/^(?:Spencer-86)/,/^(?:Apache-1\\.0)/,/^(?:ClArtistic)/,/^(?:TORQUE-1\\.1)/,/^(?:CATOSL-1\\.1)/,/^(?:Adobe-2006)/,/^(?:Zimbra-1\\.4)/,/^(?:Zimbra-1\\.3)/,/^(?:Condor-1\\.1)/,/^(?:CC-BY-3\\.0)/,/^(?:CC-BY-2\\.5)/,/^(?:OLDAP-2\\.4)/,/^(?:SGI-B-1\\.1)/,/^(?:SISSL-1\\.2)/,/^(?:SGI-B-1\\.0)/,/^(?:OLDAP-2\\.3)/,/^(?:CC-BY-4\\.0)/,/^(?:Crossword)/,/^(?:SimPL-2\\.0)/,/^(?:OLDAP-2\\.2)/,/^(?:OLDAP-2\\.1)/,/^(?:ErlPL-1\\.1)/,/^(?:LPPL-1\\.3a)/,/^(?:LPPL-1\\.3c)/,/^(?:OLDAP-2\\.0)/,/^(?:Leptonica)/,/^(?:CPOL-1\\.02)/,/^(?:OLDAP-1\\.4)/,/^(?:OLDAP-1\\.3)/,/^(?:CC-BY-2\\.0)/,/^(?:Unlicense)/,/^(?:OLDAP-2\\.8)/,/^(?:OLDAP-1\\.2)/,/^(?:MakeIndex)/,/^(?:OLDAP-2\\.7)/,/^(?:OLDAP-1\\.1)/,/^(?:Sleepycat)/,/^(?:D-FSL-1\\.0)/,/^(?:CC-BY-1\\.0)/,/^(?:OLDAP-2\\.6)/,/^(?:WXwindows)/,/^(?:NPOSL-3\\.0)/,/^(?:FreeImage)/,/^(?:SGI-B-2\\.0)/,/^(?:OLDAP-2\\.5)/,/^(?:Beerware)/,/^(?:Newsletr)/,/^(?:NBPL-1\\.0)/,/^(?:NASA-1\\.3)/,/^(?:NLOD-1\\.0)/,/^(?:AGPL-1\\.0)/,/^(?:OCLC-2\\.0)/,/^(?:ODbL-1\\.0)/,/^(?:PDDL-1\\.0)/,/^(?:Motosoto)/,/^(?:Afmparse)/,/^(?:ANTLR-PD)/,/^(?:LPL-1\\.02)/,/^(?:Abstyles)/,/^(?:eCos-2\\.0)/,/^(?:APSL-1\\.0)/,/^(?:LPPL-1\\.2)/,/^(?:LPPL-1\\.1)/,/^(?:LPPL-1\\.0)/,/^(?:APSL-1\\.1)/,/^(?:APSL-2\\.0)/,/^(?:Info-ZIP)/,/^(?:Zend-2\\.0)/,/^(?:IBM-pibs)/,/^(?:LGPL-2\\.0)/,/^(?:LGPL-3\\.0)/,/^(?:LGPL-2\\.1)/,/^(?:GFDL-1\\.3)/,/^(?:PHP-3\\.01)/,/^(?:GFDL-1\\.2)/,/^(?:GFDL-1\\.1)/,/^(?:AGPL-3\\.0)/,/^(?:Giftware)/,/^(?:EUPL-1\\.1)/,/^(?:RPSL-1\\.0)/,/^(?:EUPL-1\\.0)/,/^(?:MIT-enna)/,/^(?:CECILL-B)/,/^(?:diffmark)/,/^(?:CECILL-C)/,/^(?:CDDL-1\\.0)/,/^(?:Sendmail)/,/^(?:CDDL-1\\.1)/,/^(?:CPAL-1\\.0)/,/^(?:APSL-1\\.2)/,/^(?:NPL-1\\.1)/,/^(?:AFL-1\\.2)/,/^(?:Caldera)/,/^(?:AFL-2\\.0)/,/^(?:FSFULLR)/,/^(?:AFL-2\\.1)/,/^(?:VSL-1\\.0)/,/^(?:VOSTROM)/,/^(?:UPL-1\\.0)/,/^(?:Dotseqn)/,/^(?:CPL-1\\.0)/,/^(?:dvipdfm)/,/^(?:EPL-1\\.0)/,/^(?:OCCT-PL)/,/^(?:ECL-1\\.0)/,/^(?:Latex2e)/,/^(?:ECL-2\\.0)/,/^(?:GPL-1\\.0)/,/^(?:GPL-2\\.0)/,/^(?:GPL-3\\.0)/,/^(?:AFL-3\\.0)/,/^(?:LAL-1\\.2)/,/^(?:LAL-1\\.3)/,/^(?:EFL-1\\.0)/,/^(?:EFL-2\\.0)/,/^(?:gnuplot)/,/^(?:Aladdin)/,/^(?:LPL-1\\.0)/,/^(?:libtiff)/,/^(?:Entessa)/,/^(?:AMDPLPA)/,/^(?:IPL-1\\.0)/,/^(?:OPL-1\\.0)/,/^(?:OSL-1\\.0)/,/^(?:OSL-1\\.1)/,/^(?:OSL-2\\.0)/,/^(?:OSL-2\\.1)/,/^(?:OSL-3\\.0)/,/^(?:OpenSSL)/,/^(?:ZPL-2\\.1)/,/^(?:PHP-3\\.0)/,/^(?:ZPL-2\\.0)/,/^(?:ZPL-1\\.1)/,/^(?:CC0-1\\.0)/,/^(?:SPL-1\\.0)/,/^(?:psutils)/,/^(?:MPL-1\\.0)/,/^(?:QPL-1\\.0)/,/^(?:MPL-1\\.1)/,/^(?:MPL-2\\.0)/,/^(?:APL-1\\.0)/,/^(?:RPL-1\\.1)/,/^(?:RPL-1\\.5)/,/^(?:MIT-CMU)/,/^(?:Multics)/,/^(?:Eurosym)/,/^(?:BSL-1\\.0)/,/^(?:MIT-feh)/,/^(?:Saxpath)/,/^(?:Borceux)/,/^(?:OFL-1\\.1)/,/^(?:OFL-1\\.0)/,/^(?:AFL-1\\.1)/,/^(?:YPL-1\\.1)/,/^(?:YPL-1\\.0)/,/^(?:NPL-1\\.0)/,/^(?:iMatix)/,/^(?:mpich2)/,/^(?:APAFML)/,/^(?:Bahyph)/,/^(?:RSA-MD)/,/^(?:psfrag)/,/^(?:Plexus)/,/^(?:eGenix)/,/^(?:Glulxe)/,/^(?:SAX-PD)/,/^(?:Imlib2)/,/^(?:Wsuipa)/,/^(?:LGPLLR)/,/^(?:Libpng)/,/^(?:xinetd)/,/^(?:MITNFA)/,/^(?:NetCDF)/,/^(?:Naumen)/,/^(?:SMPPL)/,/^(?:Nunit)/,/^(?:FSFUL)/,/^(?:GL2PS)/,/^(?:SMLNJ)/,/^(?:Rdisc)/,/^(?:Noweb)/,/^(?:Nokia)/,/^(?:SISSL)/,/^(?:Qhull)/,/^(?:Intel)/,/^(?:Glide)/,/^(?:Xerox)/,/^(?:AMPAS)/,/^(?:WTFPL)/,/^(?:MS-PL)/,/^(?:XSkat)/,/^(?:MS-RL)/,/^(?:MirOS)/,/^(?:RSCPL)/,/^(?:TMate)/,/^(?:OGTSL)/,/^(?:FSFAP)/,/^(?:NCSA)/,/^(?:Zlib)/,/^(?:SCEA)/,/^(?:SNIA)/,/^(?:NGPL)/,/^(?:NOSL)/,/^(?:ADSL)/,/^(?:MTLL)/,/^(?:NLPL)/,/^(?:Ruby)/,/^(?:JSON)/,/^(?:Barr)/,/^(?:0BSD)/,/^(?:Xnet)/,/^(?:Cube)/,/^(?:curl)/,/^(?:DSDP)/,/^(?:Fair)/,/^(?:HPND)/,/^(?:TOSL)/,/^(?:IJG)/,/^(?:SWL)/,/^(?:Vim)/,/^(?:FTL)/,/^(?:ICU)/,/^(?:OML)/,/^(?:NRL)/,/^(?:DOC)/,/^(?:TCL)/,/^(?:W3C)/,/^(?:NTP)/,/^(?:IPA)/,/^(?:ISC)/,/^(?:X11)/,/^(?:AAL)/,/^(?:AML)/,/^(?:xpp)/,/^(?:Zed)/,/^(?:MIT)/,/^(?:Mup)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = spdxparse;\nexports.Parser = spdxparse.Parser;\nexports.parse = function () { return spdxparse.parse.apply(spdxparse, arguments); };\nexports.main = function commonjsMain(args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}\n"]},"metadata":{},"sourceType":"script"}