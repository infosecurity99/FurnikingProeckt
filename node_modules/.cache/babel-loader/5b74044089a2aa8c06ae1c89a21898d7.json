{"ast":null,"code":"// this file handles outputting usage instructions,\n// failures, etc. keeps logging in one place.\nconst stringWidth = require('string-width');\n\nconst objFilter = require('./obj-filter');\n\nconst setBlocking = require('set-blocking');\n\nconst YError = require('./yerror');\n\nmodule.exports = function (yargs, y18n) {\n  const __ = y18n.__;\n  const self = {}; // methods for ouputting/building failure message.\n\n  var fails = [];\n\n  self.failFn = function (f) {\n    fails.push(f);\n  };\n\n  var failMessage = null;\n  var showHelpOnFail = true;\n\n  self.showHelpOnFail = function (enabled, message) {\n    if (typeof enabled === 'string') {\n      message = enabled;\n      enabled = true;\n    } else if (typeof enabled === 'undefined') {\n      enabled = true;\n    }\n\n    failMessage = message;\n    showHelpOnFail = enabled;\n    return self;\n  };\n\n  var failureOutput = false;\n\n  self.fail = function (msg, err) {\n    const logger = yargs._getLoggerInstance();\n\n    if (fails.length) {\n      for (var i = fails.length - 1; i >= 0; --i) {\n        fails[i](msg, err, self);\n      }\n    } else {\n      if (yargs.getExitProcess()) setBlocking(true); // don't output failure message more than once\n\n      if (!failureOutput) {\n        failureOutput = true;\n        if (showHelpOnFail) yargs.showHelp('error');\n        if (msg) logger.error(msg);\n\n        if (failMessage) {\n          if (msg) logger.error('');\n          logger.error(failMessage);\n        }\n      }\n\n      err = err || new YError(msg);\n\n      if (yargs.getExitProcess()) {\n        return yargs.exit(1);\n      } else if (yargs._hasParseCallback()) {\n        return yargs.exit(1, err);\n      } else {\n        throw err;\n      }\n    }\n  }; // methods for ouputting/building help (usage) message.\n\n\n  var usage;\n\n  self.usage = function (msg) {\n    usage = msg;\n  };\n\n  self.getUsage = function () {\n    return usage;\n  };\n\n  var examples = [];\n\n  self.example = function (cmd, description) {\n    examples.push([cmd, description || '']);\n  };\n\n  var commands = [];\n\n  self.command = function (cmd, description, isDefault, aliases) {\n    // the last default wins, so cancel out any previously set default\n    if (isDefault) {\n      commands = commands.map(function (cmdArray) {\n        cmdArray[2] = false;\n        return cmdArray;\n      });\n    }\n\n    commands.push([cmd, description || '', isDefault, aliases]);\n  };\n\n  self.getCommands = function () {\n    return commands;\n  };\n\n  var descriptions = {};\n\n  self.describe = function (key, desc) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.describe(k, key[k]);\n      });\n    } else {\n      descriptions[key] = desc;\n    }\n  };\n\n  self.getDescriptions = function () {\n    return descriptions;\n  };\n\n  var epilog;\n\n  self.epilog = function (msg) {\n    epilog = msg;\n  };\n\n  var wrapSet = false;\n  var wrap;\n\n  self.wrap = function (cols) {\n    wrapSet = true;\n    wrap = cols;\n  };\n\n  function getWrap() {\n    if (!wrapSet) {\n      wrap = windowWidth();\n      wrapSet = true;\n    }\n\n    return wrap;\n  }\n\n  var deferY18nLookupPrefix = '__yargsString__:';\n\n  self.deferY18nLookup = function (str) {\n    return deferY18nLookupPrefix + str;\n  };\n\n  var defaultGroup = 'Options:';\n\n  self.help = function () {\n    normalizeAliases(); // handle old demanded API\n\n    var demandedOptions = yargs.getDemandedOptions();\n    var demandedCommands = yargs.getDemandedCommands();\n    var groups = yargs.getGroups();\n    var options = yargs.getOptions();\n    var keys = Object.keys(Object.keys(descriptions).concat(Object.keys(demandedOptions)).concat(Object.keys(demandedCommands)).concat(Object.keys(options.default)).reduce(function (acc, key) {\n      if (key !== '_') acc[key] = true;\n      return acc;\n    }, {}));\n    var theWrap = getWrap();\n\n    var ui = require('cliui')({\n      width: theWrap,\n      wrap: !!theWrap\n    }); // the usage string.\n\n\n    if (usage) {\n      var u = usage.replace(/\\$0/g, yargs.$0);\n      ui.div(u + '\\n');\n    } // your application's commands, i.e., non-option\n    // arguments populated in '_'.\n\n\n    if (commands.length) {\n      ui.div(__('Commands:'));\n      commands.forEach(function (command) {\n        ui.span({\n          text: command[0],\n          padding: [0, 2, 0, 2],\n          width: maxWidth(commands, theWrap) + 4\n        }, {\n          text: command[1]\n        });\n        var hints = [];\n        if (command[2]) hints.push('[' + __('default:').slice(0, -1) + ']'); // TODO hacking around i18n here\n\n        if (command[3] && command[3].length) {\n          hints.push('[' + __('aliases:') + ' ' + command[3].join(', ') + ']');\n        }\n\n        if (hints.length) {\n          ui.div({\n            text: hints.join(' '),\n            padding: [0, 0, 0, 2],\n            align: 'right'\n          });\n        } else {\n          ui.div();\n        }\n      });\n      ui.div();\n    } // perform some cleanup on the keys array, making it\n    // only include top-level keys not their aliases.\n\n\n    var aliasKeys = (Object.keys(options.alias) || []).concat(Object.keys(yargs.parsed.newAliases) || []);\n    keys = keys.filter(function (key) {\n      return !yargs.parsed.newAliases[key] && aliasKeys.every(function (alias) {\n        return (options.alias[alias] || []).indexOf(key) === -1;\n      });\n    }); // populate 'Options:' group with any keys that have not\n    // explicitly had a group set.\n\n    if (!groups[defaultGroup]) groups[defaultGroup] = [];\n    addUngroupedKeys(keys, options.alias, groups); // display 'Options:' table along with any custom tables:\n\n    Object.keys(groups).forEach(function (groupName) {\n      if (!groups[groupName].length) return;\n      ui.div(__(groupName)); // if we've grouped the key 'f', but 'f' aliases 'foobar',\n      // normalizedKeys should contain only 'foobar'.\n\n      var normalizedKeys = groups[groupName].map(function (key) {\n        if (~aliasKeys.indexOf(key)) return key;\n\n        for (var i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n          if (~(options.alias[aliasKey] || []).indexOf(key)) return aliasKey;\n        }\n\n        return key;\n      }); // actually generate the switches string --foo, -f, --bar.\n\n      var switches = normalizedKeys.reduce(function (acc, key) {\n        acc[key] = [key].concat(options.alias[key] || []).map(function (sw) {\n          return (sw.length > 1 ? '--' : '-') + sw;\n        }).join(', ');\n        return acc;\n      }, {});\n      normalizedKeys.forEach(function (key) {\n        var kswitch = switches[key];\n        var desc = descriptions[key] || '';\n        var type = null;\n        if (~desc.lastIndexOf(deferY18nLookupPrefix)) desc = __(desc.substring(deferY18nLookupPrefix.length));\n        if (~options.boolean.indexOf(key)) type = '[' + __('boolean') + ']';\n        if (~options.count.indexOf(key)) type = '[' + __('count') + ']';\n        if (~options.string.indexOf(key)) type = '[' + __('string') + ']';\n        if (~options.normalize.indexOf(key)) type = '[' + __('string') + ']';\n        if (~options.array.indexOf(key)) type = '[' + __('array') + ']';\n        if (~options.number.indexOf(key)) type = '[' + __('number') + ']';\n        var extra = [type, key in demandedOptions ? '[' + __('required') + ']' : null, options.choices && options.choices[key] ? '[' + __('choices:') + ' ' + self.stringifiedValues(options.choices[key]) + ']' : null, defaultString(options.default[key], options.defaultDescription[key])].filter(Boolean).join(' ');\n        ui.span({\n          text: kswitch,\n          padding: [0, 2, 0, 2],\n          width: maxWidth(switches, theWrap) + 4\n        }, desc);\n        if (extra) ui.div({\n          text: extra,\n          padding: [0, 0, 0, 2],\n          align: 'right'\n        });else ui.div();\n      });\n      ui.div();\n    }); // describe some common use-cases for your application.\n\n    if (examples.length) {\n      ui.div(__('Examples:'));\n      examples.forEach(function (example) {\n        example[0] = example[0].replace(/\\$0/g, yargs.$0);\n      });\n      examples.forEach(function (example) {\n        if (example[1] === '') {\n          ui.div({\n            text: example[0],\n            padding: [0, 2, 0, 2]\n          });\n        } else {\n          ui.div({\n            text: example[0],\n            padding: [0, 2, 0, 2],\n            width: maxWidth(examples, theWrap) + 4\n          }, {\n            text: example[1]\n          });\n        }\n      });\n      ui.div();\n    } // the usage string.\n\n\n    if (epilog) {\n      var e = epilog.replace(/\\$0/g, yargs.$0);\n      ui.div(e + '\\n');\n    }\n\n    return ui.toString();\n  }; // return the maximum width of a string\n  // in the left-hand column of a table.\n\n\n  function maxWidth(table, theWrap) {\n    var width = 0; // table might be of the form [leftColumn],\n    // or {key: leftColumn}\n\n    if (!Array.isArray(table)) {\n      table = Object.keys(table).map(function (key) {\n        return [table[key]];\n      });\n    }\n\n    table.forEach(function (v) {\n      width = Math.max(stringWidth(v[0]), width);\n    }); // if we've enabled 'wrap' we should limit\n    // the max-width of the left-column.\n\n    if (theWrap) width = Math.min(width, parseInt(theWrap * 0.5, 10));\n    return width;\n  } // make sure any options set for aliases,\n  // are copied to the keys being aliased.\n\n\n  function normalizeAliases() {\n    // handle old demanded API\n    var demandedOptions = yargs.getDemandedOptions();\n    var options = yargs.getOptions();\n    (Object.keys(options.alias) || []).forEach(function (key) {\n      options.alias[key].forEach(function (alias) {\n        // copy descriptions.\n        if (descriptions[alias]) self.describe(key, descriptions[alias]); // copy demanded.\n\n        if (alias in demandedOptions) yargs.demandOption(key, demandedOptions[alias]); // type messages.\n\n        if (~options.boolean.indexOf(alias)) yargs.boolean(key);\n        if (~options.count.indexOf(alias)) yargs.count(key);\n        if (~options.string.indexOf(alias)) yargs.string(key);\n        if (~options.normalize.indexOf(alias)) yargs.normalize(key);\n        if (~options.array.indexOf(alias)) yargs.array(key);\n        if (~options.number.indexOf(alias)) yargs.number(key);\n      });\n    });\n  } // given a set of keys, place any keys that are\n  // ungrouped under the 'Options:' grouping.\n\n\n  function addUngroupedKeys(keys, aliases, groups) {\n    var groupedKeys = [];\n    var toCheck = null;\n    Object.keys(groups).forEach(function (group) {\n      groupedKeys = groupedKeys.concat(groups[group]);\n    });\n    keys.forEach(function (key) {\n      toCheck = [key].concat(aliases[key]);\n\n      if (!toCheck.some(function (k) {\n        return groupedKeys.indexOf(k) !== -1;\n      })) {\n        groups[defaultGroup].push(key);\n      }\n    });\n    return groupedKeys;\n  }\n\n  self.showHelp = function (level) {\n    const logger = yargs._getLoggerInstance();\n\n    if (!level) level = 'error';\n    var emit = typeof level === 'function' ? level : logger[level];\n    emit(self.help());\n  };\n\n  self.functionDescription = function (fn) {\n    var description = fn.name ? require('decamelize')(fn.name, '-') : __('generated-value');\n    return ['(', description, ')'].join('');\n  };\n\n  self.stringifiedValues = function (values, separator) {\n    var string = '';\n    var sep = separator || ', ';\n    var array = [].concat(values);\n    if (!values || !array.length) return string;\n    array.forEach(function (value) {\n      if (string.length) string += sep;\n      string += JSON.stringify(value);\n    });\n    return string;\n  }; // format the default-value-string displayed in\n  // the right-hand column.\n\n\n  function defaultString(value, defaultDescription) {\n    var string = '[' + __('default:') + ' ';\n    if (value === undefined && !defaultDescription) return null;\n\n    if (defaultDescription) {\n      string += defaultDescription;\n    } else {\n      switch (typeof value) {\n        case 'string':\n          string += JSON.stringify(value);\n          break;\n\n        case 'object':\n          string += JSON.stringify(value);\n          break;\n\n        default:\n          string += value;\n      }\n    }\n\n    return string + ']';\n  } // guess the width of the console window, max-width 80.\n\n\n  function windowWidth() {\n    var maxWidth = 80;\n\n    if (typeof process === 'object' && process.stdout && process.stdout.columns) {\n      return Math.min(maxWidth, process.stdout.columns);\n    } else {\n      return maxWidth;\n    }\n  } // logic for displaying application version.\n\n\n  var version = null;\n\n  self.version = function (ver) {\n    version = ver;\n  };\n\n  self.showVersion = function () {\n    const logger = yargs._getLoggerInstance();\n\n    if (typeof version === 'function') logger.log(version());else logger.log(version);\n  };\n\n  self.reset = function (localLookup) {\n    // do not reset wrap here\n    // do not reset fails here\n    failMessage = null;\n    failureOutput = false;\n    usage = undefined;\n    epilog = undefined;\n    examples = [];\n    commands = [];\n    descriptions = objFilter(descriptions, function (k, v) {\n      return !localLookup[k];\n    });\n    return self;\n  };\n\n  var frozen;\n\n  self.freeze = function () {\n    frozen = {};\n    frozen.failMessage = failMessage;\n    frozen.failureOutput = failureOutput;\n    frozen.usage = usage;\n    frozen.epilog = epilog;\n    frozen.examples = examples;\n    frozen.commands = commands;\n    frozen.descriptions = descriptions;\n  };\n\n  self.unfreeze = function () {\n    failMessage = frozen.failMessage;\n    failureOutput = frozen.failureOutput;\n    usage = frozen.usage;\n    epilog = frozen.epilog;\n    examples = frozen.examples;\n    commands = frozen.commands;\n    descriptions = frozen.descriptions;\n    frozen = undefined;\n  };\n\n  return self;\n};","map":{"version":3,"sources":["C:/Users/Hp/node_modules/npx/node_modules/yargs/lib/usage.js"],"names":["stringWidth","require","objFilter","setBlocking","YError","module","exports","yargs","y18n","__","self","fails","failFn","f","push","failMessage","showHelpOnFail","enabled","message","failureOutput","fail","msg","err","logger","_getLoggerInstance","length","i","getExitProcess","showHelp","error","exit","_hasParseCallback","usage","getUsage","examples","example","cmd","description","commands","command","isDefault","aliases","map","cmdArray","getCommands","descriptions","describe","key","desc","Object","keys","forEach","k","getDescriptions","epilog","wrapSet","wrap","cols","getWrap","windowWidth","deferY18nLookupPrefix","deferY18nLookup","str","defaultGroup","help","normalizeAliases","demandedOptions","getDemandedOptions","demandedCommands","getDemandedCommands","groups","getGroups","options","getOptions","concat","default","reduce","acc","theWrap","ui","width","u","replace","$0","div","span","text","padding","maxWidth","hints","slice","join","align","aliasKeys","alias","parsed","newAliases","filter","every","indexOf","addUngroupedKeys","groupName","normalizedKeys","aliasKey","undefined","switches","sw","kswitch","type","lastIndexOf","substring","boolean","count","string","normalize","array","number","extra","choices","stringifiedValues","defaultString","defaultDescription","Boolean","e","toString","table","Array","isArray","v","Math","max","min","parseInt","demandOption","groupedKeys","toCheck","group","some","level","emit","functionDescription","fn","name","values","separator","sep","value","JSON","stringify","process","stdout","columns","version","ver","showVersion","log","reset","localLookup","frozen","freeze","unfreeze"],"mappings":"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","sourcesContent":["// this file handles outputting usage instructions,\n// failures, etc. keeps logging in one place.\nconst stringWidth = require('string-width')\nconst objFilter = require('./obj-filter')\nconst setBlocking = require('set-blocking')\nconst YError = require('./yerror')\n\nmodule.exports = function (yargs, y18n) {\n  const __ = y18n.__\n  const self = {}\n\n  // methods for ouputting/building failure message.\n  var fails = []\n  self.failFn = function (f) {\n    fails.push(f)\n  }\n\n  var failMessage = null\n  var showHelpOnFail = true\n  self.showHelpOnFail = function (enabled, message) {\n    if (typeof enabled === 'string') {\n      message = enabled\n      enabled = true\n    } else if (typeof enabled === 'undefined') {\n      enabled = true\n    }\n    failMessage = message\n    showHelpOnFail = enabled\n    return self\n  }\n\n  var failureOutput = false\n  self.fail = function (msg, err) {\n    const logger = yargs._getLoggerInstance()\n\n    if (fails.length) {\n      for (var i = fails.length - 1; i >= 0; --i) {\n        fails[i](msg, err, self)\n      }\n    } else {\n      if (yargs.getExitProcess()) setBlocking(true)\n\n      // don't output failure message more than once\n      if (!failureOutput) {\n        failureOutput = true\n        if (showHelpOnFail) yargs.showHelp('error')\n        if (msg) logger.error(msg)\n        if (failMessage) {\n          if (msg) logger.error('')\n          logger.error(failMessage)\n        }\n      }\n\n      err = err || new YError(msg)\n      if (yargs.getExitProcess()) {\n        return yargs.exit(1)\n      } else if (yargs._hasParseCallback()) {\n        return yargs.exit(1, err)\n      } else {\n        throw err\n      }\n    }\n  }\n\n  // methods for ouputting/building help (usage) message.\n  var usage\n  self.usage = function (msg) {\n    usage = msg\n  }\n  self.getUsage = function () {\n    return usage\n  }\n\n  var examples = []\n  self.example = function (cmd, description) {\n    examples.push([cmd, description || ''])\n  }\n\n  var commands = []\n  self.command = function (cmd, description, isDefault, aliases) {\n    // the last default wins, so cancel out any previously set default\n    if (isDefault) {\n      commands = commands.map(function (cmdArray) {\n        cmdArray[2] = false\n        return cmdArray\n      })\n    }\n    commands.push([cmd, description || '', isDefault, aliases])\n  }\n  self.getCommands = function () {\n    return commands\n  }\n\n  var descriptions = {}\n  self.describe = function (key, desc) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.describe(k, key[k])\n      })\n    } else {\n      descriptions[key] = desc\n    }\n  }\n  self.getDescriptions = function () {\n    return descriptions\n  }\n\n  var epilog\n  self.epilog = function (msg) {\n    epilog = msg\n  }\n\n  var wrapSet = false\n  var wrap\n  self.wrap = function (cols) {\n    wrapSet = true\n    wrap = cols\n  }\n\n  function getWrap () {\n    if (!wrapSet) {\n      wrap = windowWidth()\n      wrapSet = true\n    }\n\n    return wrap\n  }\n\n  var deferY18nLookupPrefix = '__yargsString__:'\n  self.deferY18nLookup = function (str) {\n    return deferY18nLookupPrefix + str\n  }\n\n  var defaultGroup = 'Options:'\n  self.help = function () {\n    normalizeAliases()\n\n    // handle old demanded API\n    var demandedOptions = yargs.getDemandedOptions()\n    var demandedCommands = yargs.getDemandedCommands()\n    var groups = yargs.getGroups()\n    var options = yargs.getOptions()\n    var keys = Object.keys(\n      Object.keys(descriptions)\n      .concat(Object.keys(demandedOptions))\n      .concat(Object.keys(demandedCommands))\n      .concat(Object.keys(options.default))\n      .reduce(function (acc, key) {\n        if (key !== '_') acc[key] = true\n        return acc\n      }, {})\n    )\n\n    var theWrap = getWrap()\n    var ui = require('cliui')({\n      width: theWrap,\n      wrap: !!theWrap\n    })\n\n    // the usage string.\n    if (usage) {\n      var u = usage.replace(/\\$0/g, yargs.$0)\n      ui.div(u + '\\n')\n    }\n\n    // your application's commands, i.e., non-option\n    // arguments populated in '_'.\n    if (commands.length) {\n      ui.div(__('Commands:'))\n\n      commands.forEach(function (command) {\n        ui.span(\n          {text: command[0], padding: [0, 2, 0, 2], width: maxWidth(commands, theWrap) + 4},\n          {text: command[1]}\n        )\n        var hints = []\n        if (command[2]) hints.push('[' + __('default:').slice(0, -1) + ']') // TODO hacking around i18n here\n        if (command[3] && command[3].length) {\n          hints.push('[' + __('aliases:') + ' ' + command[3].join(', ') + ']')\n        }\n        if (hints.length) {\n          ui.div({text: hints.join(' '), padding: [0, 0, 0, 2], align: 'right'})\n        } else {\n          ui.div()\n        }\n      })\n\n      ui.div()\n    }\n\n    // perform some cleanup on the keys array, making it\n    // only include top-level keys not their aliases.\n    var aliasKeys = (Object.keys(options.alias) || [])\n      .concat(Object.keys(yargs.parsed.newAliases) || [])\n\n    keys = keys.filter(function (key) {\n      return !yargs.parsed.newAliases[key] && aliasKeys.every(function (alias) {\n        return (options.alias[alias] || []).indexOf(key) === -1\n      })\n    })\n\n    // populate 'Options:' group with any keys that have not\n    // explicitly had a group set.\n    if (!groups[defaultGroup]) groups[defaultGroup] = []\n    addUngroupedKeys(keys, options.alias, groups)\n\n    // display 'Options:' table along with any custom tables:\n    Object.keys(groups).forEach(function (groupName) {\n      if (!groups[groupName].length) return\n\n      ui.div(__(groupName))\n\n      // if we've grouped the key 'f', but 'f' aliases 'foobar',\n      // normalizedKeys should contain only 'foobar'.\n      var normalizedKeys = groups[groupName].map(function (key) {\n        if (~aliasKeys.indexOf(key)) return key\n        for (var i = 0, aliasKey; (aliasKey = aliasKeys[i]) !== undefined; i++) {\n          if (~(options.alias[aliasKey] || []).indexOf(key)) return aliasKey\n        }\n        return key\n      })\n\n      // actually generate the switches string --foo, -f, --bar.\n      var switches = normalizedKeys.reduce(function (acc, key) {\n        acc[key] = [ key ].concat(options.alias[key] || [])\n          .map(function (sw) {\n            return (sw.length > 1 ? '--' : '-') + sw\n          })\n          .join(', ')\n\n        return acc\n      }, {})\n\n      normalizedKeys.forEach(function (key) {\n        var kswitch = switches[key]\n        var desc = descriptions[key] || ''\n        var type = null\n\n        if (~desc.lastIndexOf(deferY18nLookupPrefix)) desc = __(desc.substring(deferY18nLookupPrefix.length))\n\n        if (~options.boolean.indexOf(key)) type = '[' + __('boolean') + ']'\n        if (~options.count.indexOf(key)) type = '[' + __('count') + ']'\n        if (~options.string.indexOf(key)) type = '[' + __('string') + ']'\n        if (~options.normalize.indexOf(key)) type = '[' + __('string') + ']'\n        if (~options.array.indexOf(key)) type = '[' + __('array') + ']'\n        if (~options.number.indexOf(key)) type = '[' + __('number') + ']'\n\n        var extra = [\n          type,\n          (key in demandedOptions) ? '[' + __('required') + ']' : null,\n          options.choices && options.choices[key] ? '[' + __('choices:') + ' ' +\n            self.stringifiedValues(options.choices[key]) + ']' : null,\n          defaultString(options.default[key], options.defaultDescription[key])\n        ].filter(Boolean).join(' ')\n\n        ui.span(\n          {text: kswitch, padding: [0, 2, 0, 2], width: maxWidth(switches, theWrap) + 4},\n          desc\n        )\n\n        if (extra) ui.div({text: extra, padding: [0, 0, 0, 2], align: 'right'})\n        else ui.div()\n      })\n\n      ui.div()\n    })\n\n    // describe some common use-cases for your application.\n    if (examples.length) {\n      ui.div(__('Examples:'))\n\n      examples.forEach(function (example) {\n        example[0] = example[0].replace(/\\$0/g, yargs.$0)\n      })\n\n      examples.forEach(function (example) {\n        if (example[1] === '') {\n          ui.div(\n            {\n              text: example[0],\n              padding: [0, 2, 0, 2]\n            }\n          )\n        } else {\n          ui.div(\n            {\n              text: example[0],\n              padding: [0, 2, 0, 2],\n              width: maxWidth(examples, theWrap) + 4\n            }, {\n              text: example[1]\n            }\n          )\n        }\n      })\n\n      ui.div()\n    }\n\n    // the usage string.\n    if (epilog) {\n      var e = epilog.replace(/\\$0/g, yargs.$0)\n      ui.div(e + '\\n')\n    }\n\n    return ui.toString()\n  }\n\n  // return the maximum width of a string\n  // in the left-hand column of a table.\n  function maxWidth (table, theWrap) {\n    var width = 0\n\n    // table might be of the form [leftColumn],\n    // or {key: leftColumn}\n    if (!Array.isArray(table)) {\n      table = Object.keys(table).map(function (key) {\n        return [table[key]]\n      })\n    }\n\n    table.forEach(function (v) {\n      width = Math.max(stringWidth(v[0]), width)\n    })\n\n    // if we've enabled 'wrap' we should limit\n    // the max-width of the left-column.\n    if (theWrap) width = Math.min(width, parseInt(theWrap * 0.5, 10))\n\n    return width\n  }\n\n  // make sure any options set for aliases,\n  // are copied to the keys being aliased.\n  function normalizeAliases () {\n    // handle old demanded API\n    var demandedOptions = yargs.getDemandedOptions()\n    var options = yargs.getOptions()\n\n    ;(Object.keys(options.alias) || []).forEach(function (key) {\n      options.alias[key].forEach(function (alias) {\n        // copy descriptions.\n        if (descriptions[alias]) self.describe(key, descriptions[alias])\n        // copy demanded.\n        if (alias in demandedOptions) yargs.demandOption(key, demandedOptions[alias])\n        // type messages.\n        if (~options.boolean.indexOf(alias)) yargs.boolean(key)\n        if (~options.count.indexOf(alias)) yargs.count(key)\n        if (~options.string.indexOf(alias)) yargs.string(key)\n        if (~options.normalize.indexOf(alias)) yargs.normalize(key)\n        if (~options.array.indexOf(alias)) yargs.array(key)\n        if (~options.number.indexOf(alias)) yargs.number(key)\n      })\n    })\n  }\n\n  // given a set of keys, place any keys that are\n  // ungrouped under the 'Options:' grouping.\n  function addUngroupedKeys (keys, aliases, groups) {\n    var groupedKeys = []\n    var toCheck = null\n    Object.keys(groups).forEach(function (group) {\n      groupedKeys = groupedKeys.concat(groups[group])\n    })\n\n    keys.forEach(function (key) {\n      toCheck = [key].concat(aliases[key])\n      if (!toCheck.some(function (k) {\n        return groupedKeys.indexOf(k) !== -1\n      })) {\n        groups[defaultGroup].push(key)\n      }\n    })\n    return groupedKeys\n  }\n\n  self.showHelp = function (level) {\n    const logger = yargs._getLoggerInstance()\n    if (!level) level = 'error'\n    var emit = typeof level === 'function' ? level : logger[level]\n    emit(self.help())\n  }\n\n  self.functionDescription = function (fn) {\n    var description = fn.name ? require('decamelize')(fn.name, '-') : __('generated-value')\n    return ['(', description, ')'].join('')\n  }\n\n  self.stringifiedValues = function (values, separator) {\n    var string = ''\n    var sep = separator || ', '\n    var array = [].concat(values)\n\n    if (!values || !array.length) return string\n\n    array.forEach(function (value) {\n      if (string.length) string += sep\n      string += JSON.stringify(value)\n    })\n\n    return string\n  }\n\n  // format the default-value-string displayed in\n  // the right-hand column.\n  function defaultString (value, defaultDescription) {\n    var string = '[' + __('default:') + ' '\n\n    if (value === undefined && !defaultDescription) return null\n\n    if (defaultDescription) {\n      string += defaultDescription\n    } else {\n      switch (typeof value) {\n        case 'string':\n          string += JSON.stringify(value)\n          break\n        case 'object':\n          string += JSON.stringify(value)\n          break\n        default:\n          string += value\n      }\n    }\n\n    return string + ']'\n  }\n\n  // guess the width of the console window, max-width 80.\n  function windowWidth () {\n    var maxWidth = 80\n    if (typeof process === 'object' && process.stdout && process.stdout.columns) {\n      return Math.min(maxWidth, process.stdout.columns)\n    } else {\n      return maxWidth\n    }\n  }\n\n  // logic for displaying application version.\n  var version = null\n  self.version = function (ver) {\n    version = ver\n  }\n\n  self.showVersion = function () {\n    const logger = yargs._getLoggerInstance()\n    if (typeof version === 'function') logger.log(version())\n    else logger.log(version)\n  }\n\n  self.reset = function (localLookup) {\n    // do not reset wrap here\n    // do not reset fails here\n    failMessage = null\n    failureOutput = false\n    usage = undefined\n    epilog = undefined\n    examples = []\n    commands = []\n    descriptions = objFilter(descriptions, function (k, v) {\n      return !localLookup[k]\n    })\n    return self\n  }\n\n  var frozen\n  self.freeze = function () {\n    frozen = {}\n    frozen.failMessage = failMessage\n    frozen.failureOutput = failureOutput\n    frozen.usage = usage\n    frozen.epilog = epilog\n    frozen.examples = examples\n    frozen.commands = commands\n    frozen.descriptions = descriptions\n  }\n  self.unfreeze = function () {\n    failMessage = frozen.failMessage\n    failureOutput = frozen.failureOutput\n    usage = frozen.usage\n    epilog = frozen.epilog\n    examples = frozen.examples\n    commands = frozen.commands\n    descriptions = frozen.descriptions\n    frozen = undefined\n  }\n\n  return self\n}\n"]},"metadata":{},"sourceType":"script"}