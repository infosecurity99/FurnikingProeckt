{"ast":null,"code":"const objFilter = require('./obj-filter');\n\nconst specialKeys = ['$0', '--', '_']; // validation-type-stuff, missing params,\n// bad implications, custom checks.\n\nmodule.exports = function (yargs, usage, y18n) {\n  const __ = y18n.__;\n  const __n = y18n.__n;\n  const self = {}; // validate appropriate # of non-option\n  // arguments were provided, i.e., '_'.\n\n  self.nonOptionCount = function (argv) {\n    const demandedCommands = yargs.getDemandedCommands(); // don't count currently executing commands\n\n    const _s = argv._.length - yargs.getContext().commands.length;\n\n    if (demandedCommands._ && (_s < demandedCommands._.min || _s > demandedCommands._.max)) {\n      if (_s < demandedCommands._.min) {\n        if (demandedCommands._.minMsg !== undefined) {\n          usage.fail( // replace $0 with observed, $1 with expected.\n          demandedCommands._.minMsg ? demandedCommands._.minMsg.replace(/\\$0/g, _s).replace(/\\$1/, demandedCommands._.min) : null);\n        } else {\n          usage.fail(__('Not enough non-option arguments: got %s, need at least %s', _s, demandedCommands._.min));\n        }\n      } else if (_s > demandedCommands._.max) {\n        if (demandedCommands._.maxMsg !== undefined) {\n          usage.fail( // replace $0 with observed, $1 with expected.\n          demandedCommands._.maxMsg ? demandedCommands._.maxMsg.replace(/\\$0/g, _s).replace(/\\$1/, demandedCommands._.max) : null);\n        } else {\n          usage.fail(__('Too many non-option arguments: got %s, maximum of %s', _s, demandedCommands._.max));\n        }\n      }\n    }\n  }; // validate the appropriate # of <required>\n  // positional arguments were provided:\n\n\n  self.positionalCount = function (required, observed) {\n    if (observed < required) {\n      usage.fail(__('Not enough non-option arguments: got %s, need at least %s', observed, required));\n    }\n  }; // make sure that any args that require an\n  // value (--foo=bar), have a value.\n\n\n  self.missingArgumentValue = function (argv) {\n    const defaultValues = [true, false, ''];\n    const options = yargs.getOptions();\n\n    if (options.requiresArg.length > 0) {\n      const missingRequiredArgs = [];\n      options.requiresArg.forEach(function (key) {\n        const value = argv[key]; // if a value is explicitly requested,\n        // flag argument as missing if it does not\n        // look like foo=bar was entered.\n\n        if (~defaultValues.indexOf(value) || Array.isArray(value) && !value.length) {\n          missingRequiredArgs.push(key);\n        }\n      });\n\n      if (missingRequiredArgs.length > 0) {\n        usage.fail(__n('Missing argument value: %s', 'Missing argument values: %s', missingRequiredArgs.length, missingRequiredArgs.join(', ')));\n      }\n    }\n  }; // make sure all the required arguments are present.\n\n\n  self.requiredArguments = function (argv) {\n    const demandedOptions = yargs.getDemandedOptions();\n    var missing = null;\n    Object.keys(demandedOptions).forEach(function (key) {\n      if (!argv.hasOwnProperty(key) || typeof argv[key] === 'undefined') {\n        missing = missing || {};\n        missing[key] = demandedOptions[key];\n      }\n    });\n\n    if (missing) {\n      const customMsgs = [];\n      Object.keys(missing).forEach(function (key) {\n        const msg = missing[key];\n\n        if (msg && customMsgs.indexOf(msg) < 0) {\n          customMsgs.push(msg);\n        }\n      });\n      const customMsg = customMsgs.length ? '\\n' + customMsgs.join('\\n') : '';\n      usage.fail(__n('Missing required argument: %s', 'Missing required arguments: %s', Object.keys(missing).length, Object.keys(missing).join(', ') + customMsg));\n    }\n  }; // check for unknown arguments (strict-mode).\n\n\n  self.unknownArguments = function (argv, aliases, positionalMap) {\n    const aliasLookup = {};\n    const descriptions = usage.getDescriptions();\n    const demandedOptions = yargs.getDemandedOptions();\n    const commandKeys = yargs.getCommandInstance().getCommands();\n    const unknown = [];\n    const currentContext = yargs.getContext();\n    Object.keys(aliases).forEach(function (key) {\n      aliases[key].forEach(function (alias) {\n        aliasLookup[alias] = key;\n      });\n    });\n    Object.keys(argv).forEach(function (key) {\n      if (specialKeys.indexOf(key) === -1 && !descriptions.hasOwnProperty(key) && !demandedOptions.hasOwnProperty(key) && !positionalMap.hasOwnProperty(key) && !yargs._getParseContext().hasOwnProperty(key) && !aliasLookup.hasOwnProperty(key)) {\n        unknown.push(key);\n      }\n    });\n\n    if (commandKeys.length > 0) {\n      argv._.slice(currentContext.commands.length).forEach(function (key) {\n        if (commandKeys.indexOf(key) === -1) {\n          unknown.push(key);\n        }\n      });\n    }\n\n    if (unknown.length > 0) {\n      usage.fail(__n('Unknown argument: %s', 'Unknown arguments: %s', unknown.length, unknown.join(', ')));\n    }\n  }; // validate arguments limited to enumerated choices\n\n\n  self.limitedChoices = function (argv) {\n    const options = yargs.getOptions();\n    const invalid = {};\n    if (!Object.keys(options.choices).length) return;\n    Object.keys(argv).forEach(function (key) {\n      if (specialKeys.indexOf(key) === -1 && options.choices.hasOwnProperty(key)) {\n        [].concat(argv[key]).forEach(function (value) {\n          // TODO case-insensitive configurability\n          if (options.choices[key].indexOf(value) === -1) {\n            invalid[key] = (invalid[key] || []).concat(value);\n          }\n        });\n      }\n    });\n    const invalidKeys = Object.keys(invalid);\n    if (!invalidKeys.length) return;\n\n    var msg = __('Invalid values:');\n\n    invalidKeys.forEach(function (key) {\n      msg += '\\n  ' + __('Argument: %s, Given: %s, Choices: %s', key, usage.stringifiedValues(invalid[key]), usage.stringifiedValues(options.choices[key]));\n    });\n    usage.fail(msg);\n  }; // custom checks, added using the `check` option on yargs.\n\n\n  var checks = [];\n\n  self.check = function (f, global) {\n    checks.push({\n      func: f,\n      global: global\n    });\n  };\n\n  self.customChecks = function (argv, aliases) {\n    for (var i = 0, f; (f = checks[i]) !== undefined; i++) {\n      var func = f.func;\n      var result = null;\n\n      try {\n        result = func(argv, aliases);\n      } catch (err) {\n        usage.fail(err.message ? err.message : err, err);\n        continue;\n      }\n\n      if (!result) {\n        usage.fail(__('Argument check failed: %s', func.toString()));\n      } else if (typeof result === 'string' || result instanceof Error) {\n        usage.fail(result.toString(), result);\n      }\n    }\n  }; // check implications, argument foo implies => argument bar.\n\n\n  var implied = {};\n\n  self.implies = function (key, value) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.implies(k, key[k]);\n      });\n    } else {\n      yargs.global(key);\n      implied[key] = value;\n    }\n  };\n\n  self.getImplied = function () {\n    return implied;\n  };\n\n  self.implications = function (argv) {\n    const implyFail = [];\n    Object.keys(implied).forEach(function (key) {\n      var num;\n      const origKey = key;\n      var value = implied[key]; // convert string '1' to number 1\n\n      num = Number(key);\n      key = isNaN(num) ? key : num;\n\n      if (typeof key === 'number') {\n        // check length of argv._\n        key = argv._.length >= key;\n      } else if (key.match(/^--no-.+/)) {\n        // check if key doesn't exist\n        key = key.match(/^--no-(.+)/)[1];\n        key = !argv[key];\n      } else {\n        // check if key exists\n        key = argv[key];\n      }\n\n      num = Number(value);\n      value = isNaN(num) ? value : num;\n\n      if (typeof value === 'number') {\n        value = argv._.length >= value;\n      } else if (value.match(/^--no-.+/)) {\n        value = value.match(/^--no-(.+)/)[1];\n        value = !argv[value];\n      } else {\n        value = argv[value];\n      }\n\n      if (key && !value) {\n        implyFail.push(origKey);\n      }\n    });\n\n    if (implyFail.length) {\n      var msg = __('Implications failed:') + '\\n';\n      implyFail.forEach(function (key) {\n        msg += '  ' + key + ' -> ' + implied[key];\n      });\n      usage.fail(msg);\n    }\n  };\n\n  var conflicting = {};\n\n  self.conflicts = function (key, value) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.conflicts(k, key[k]);\n      });\n    } else {\n      yargs.global(key);\n      conflicting[key] = value;\n    }\n  };\n\n  self.getConflicting = function () {\n    return conflicting;\n  };\n\n  self.conflicting = function (argv) {\n    var args = Object.getOwnPropertyNames(argv);\n    args.forEach(function (arg) {\n      if (conflicting[arg] && args.indexOf(conflicting[arg]) !== -1) {\n        usage.fail(__('Arguments %s and %s are mutually exclusive', arg, conflicting[arg]));\n      }\n    });\n  };\n\n  self.recommendCommands = function (cmd, potentialCommands) {\n    const distance = require('./levenshtein');\n\n    const threshold = 3; // if it takes more than three edits, let's move on.\n\n    potentialCommands = potentialCommands.sort(function (a, b) {\n      return b.length - a.length;\n    });\n    var recommended = null;\n    var bestDistance = Infinity;\n\n    for (var i = 0, candidate; (candidate = potentialCommands[i]) !== undefined; i++) {\n      var d = distance(cmd, candidate);\n\n      if (d <= threshold && d < bestDistance) {\n        bestDistance = d;\n        recommended = candidate;\n      }\n    }\n\n    if (recommended) usage.fail(__('Did you mean %s?', recommended));\n  };\n\n  self.reset = function (localLookup) {\n    implied = objFilter(implied, function (k, v) {\n      return !localLookup[k];\n    });\n    conflicting = objFilter(conflicting, function (k, v) {\n      return !localLookup[k];\n    });\n    checks = checks.filter(function (c) {\n      return c.global;\n    });\n    return self;\n  };\n\n  var frozen;\n\n  self.freeze = function () {\n    frozen = {};\n    frozen.implied = implied;\n    frozen.checks = checks;\n    frozen.conflicting = conflicting;\n  };\n\n  self.unfreeze = function () {\n    implied = frozen.implied;\n    checks = frozen.checks;\n    conflicting = frozen.conflicting;\n    frozen = undefined;\n  };\n\n  return self;\n};","map":{"version":3,"sources":["C:/Users/Hp/node_modules/npx/node_modules/yargs/lib/validation.js"],"names":["objFilter","require","specialKeys","module","exports","yargs","usage","y18n","__","__n","self","nonOptionCount","argv","demandedCommands","getDemandedCommands","_s","_","length","getContext","commands","min","max","minMsg","undefined","fail","replace","maxMsg","positionalCount","required","observed","missingArgumentValue","defaultValues","options","getOptions","requiresArg","missingRequiredArgs","forEach","key","value","indexOf","Array","isArray","push","join","requiredArguments","demandedOptions","getDemandedOptions","missing","Object","keys","hasOwnProperty","customMsgs","msg","customMsg","unknownArguments","aliases","positionalMap","aliasLookup","descriptions","getDescriptions","commandKeys","getCommandInstance","getCommands","unknown","currentContext","alias","_getParseContext","slice","limitedChoices","invalid","choices","concat","invalidKeys","stringifiedValues","checks","check","f","global","func","customChecks","i","result","err","message","toString","Error","implied","implies","k","getImplied","implications","implyFail","num","origKey","Number","isNaN","match","conflicting","conflicts","getConflicting","args","getOwnPropertyNames","arg","recommendCommands","cmd","potentialCommands","distance","threshold","sort","a","b","recommended","bestDistance","Infinity","candidate","d","reset","localLookup","v","filter","c","frozen","freeze","unfreeze"],"mappings":"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","sourcesContent":["const objFilter = require('./obj-filter')\nconst specialKeys = ['$0', '--', '_']\n\n// validation-type-stuff, missing params,\n// bad implications, custom checks.\nmodule.exports = function (yargs, usage, y18n) {\n  const __ = y18n.__\n  const __n = y18n.__n\n  const self = {}\n\n  // validate appropriate # of non-option\n  // arguments were provided, i.e., '_'.\n  self.nonOptionCount = function (argv) {\n    const demandedCommands = yargs.getDemandedCommands()\n    // don't count currently executing commands\n    const _s = argv._.length - yargs.getContext().commands.length\n\n    if (demandedCommands._ && (_s < demandedCommands._.min || _s > demandedCommands._.max)) {\n      if (_s < demandedCommands._.min) {\n        if (demandedCommands._.minMsg !== undefined) {\n          usage.fail(\n            // replace $0 with observed, $1 with expected.\n            demandedCommands._.minMsg ? demandedCommands._.minMsg.replace(/\\$0/g, _s).replace(/\\$1/, demandedCommands._.min) : null\n          )\n        } else {\n          usage.fail(\n            __('Not enough non-option arguments: got %s, need at least %s', _s, demandedCommands._.min)\n          )\n        }\n      } else if (_s > demandedCommands._.max) {\n        if (demandedCommands._.maxMsg !== undefined) {\n          usage.fail(\n            // replace $0 with observed, $1 with expected.\n            demandedCommands._.maxMsg ? demandedCommands._.maxMsg.replace(/\\$0/g, _s).replace(/\\$1/, demandedCommands._.max) : null\n          )\n        } else {\n          usage.fail(\n          __('Too many non-option arguments: got %s, maximum of %s', _s, demandedCommands._.max)\n          )\n        }\n      }\n    }\n  }\n\n  // validate the appropriate # of <required>\n  // positional arguments were provided:\n  self.positionalCount = function (required, observed) {\n    if (observed < required) {\n      usage.fail(\n        __('Not enough non-option arguments: got %s, need at least %s', observed, required)\n      )\n    }\n  }\n\n  // make sure that any args that require an\n  // value (--foo=bar), have a value.\n  self.missingArgumentValue = function (argv) {\n    const defaultValues = [true, false, '']\n    const options = yargs.getOptions()\n\n    if (options.requiresArg.length > 0) {\n      const missingRequiredArgs = []\n\n      options.requiresArg.forEach(function (key) {\n        const value = argv[key]\n\n        // if a value is explicitly requested,\n        // flag argument as missing if it does not\n        // look like foo=bar was entered.\n        if (~defaultValues.indexOf(value) ||\n          (Array.isArray(value) && !value.length)) {\n          missingRequiredArgs.push(key)\n        }\n      })\n\n      if (missingRequiredArgs.length > 0) {\n        usage.fail(__n(\n          'Missing argument value: %s',\n          'Missing argument values: %s',\n          missingRequiredArgs.length,\n          missingRequiredArgs.join(', ')\n        ))\n      }\n    }\n  }\n\n  // make sure all the required arguments are present.\n  self.requiredArguments = function (argv) {\n    const demandedOptions = yargs.getDemandedOptions()\n    var missing = null\n\n    Object.keys(demandedOptions).forEach(function (key) {\n      if (!argv.hasOwnProperty(key) || typeof argv[key] === 'undefined') {\n        missing = missing || {}\n        missing[key] = demandedOptions[key]\n      }\n    })\n\n    if (missing) {\n      const customMsgs = []\n      Object.keys(missing).forEach(function (key) {\n        const msg = missing[key]\n        if (msg && customMsgs.indexOf(msg) < 0) {\n          customMsgs.push(msg)\n        }\n      })\n\n      const customMsg = customMsgs.length ? '\\n' + customMsgs.join('\\n') : ''\n\n      usage.fail(__n(\n        'Missing required argument: %s',\n        'Missing required arguments: %s',\n        Object.keys(missing).length,\n        Object.keys(missing).join(', ') + customMsg\n      ))\n    }\n  }\n\n  // check for unknown arguments (strict-mode).\n  self.unknownArguments = function (argv, aliases, positionalMap) {\n    const aliasLookup = {}\n    const descriptions = usage.getDescriptions()\n    const demandedOptions = yargs.getDemandedOptions()\n    const commandKeys = yargs.getCommandInstance().getCommands()\n    const unknown = []\n    const currentContext = yargs.getContext()\n\n    Object.keys(aliases).forEach(function (key) {\n      aliases[key].forEach(function (alias) {\n        aliasLookup[alias] = key\n      })\n    })\n\n    Object.keys(argv).forEach(function (key) {\n      if (specialKeys.indexOf(key) === -1 &&\n        !descriptions.hasOwnProperty(key) &&\n        !demandedOptions.hasOwnProperty(key) &&\n        !positionalMap.hasOwnProperty(key) &&\n        !yargs._getParseContext().hasOwnProperty(key) &&\n        !aliasLookup.hasOwnProperty(key)) {\n        unknown.push(key)\n      }\n    })\n\n    if (commandKeys.length > 0) {\n      argv._.slice(currentContext.commands.length).forEach(function (key) {\n        if (commandKeys.indexOf(key) === -1) {\n          unknown.push(key)\n        }\n      })\n    }\n\n    if (unknown.length > 0) {\n      usage.fail(__n(\n        'Unknown argument: %s',\n        'Unknown arguments: %s',\n        unknown.length,\n        unknown.join(', ')\n      ))\n    }\n  }\n\n  // validate arguments limited to enumerated choices\n  self.limitedChoices = function (argv) {\n    const options = yargs.getOptions()\n    const invalid = {}\n\n    if (!Object.keys(options.choices).length) return\n\n    Object.keys(argv).forEach(function (key) {\n      if (specialKeys.indexOf(key) === -1 &&\n        options.choices.hasOwnProperty(key)) {\n        [].concat(argv[key]).forEach(function (value) {\n          // TODO case-insensitive configurability\n          if (options.choices[key].indexOf(value) === -1) {\n            invalid[key] = (invalid[key] || []).concat(value)\n          }\n        })\n      }\n    })\n\n    const invalidKeys = Object.keys(invalid)\n\n    if (!invalidKeys.length) return\n\n    var msg = __('Invalid values:')\n    invalidKeys.forEach(function (key) {\n      msg += '\\n  ' + __(\n        'Argument: %s, Given: %s, Choices: %s',\n        key,\n        usage.stringifiedValues(invalid[key]),\n        usage.stringifiedValues(options.choices[key])\n      )\n    })\n    usage.fail(msg)\n  }\n\n  // custom checks, added using the `check` option on yargs.\n  var checks = []\n  self.check = function (f, global) {\n    checks.push({\n      func: f,\n      global: global\n    })\n  }\n\n  self.customChecks = function (argv, aliases) {\n    for (var i = 0, f; (f = checks[i]) !== undefined; i++) {\n      var func = f.func\n      var result = null\n      try {\n        result = func(argv, aliases)\n      } catch (err) {\n        usage.fail(err.message ? err.message : err, err)\n        continue\n      }\n\n      if (!result) {\n        usage.fail(__('Argument check failed: %s', func.toString()))\n      } else if (typeof result === 'string' || result instanceof Error) {\n        usage.fail(result.toString(), result)\n      }\n    }\n  }\n\n  // check implications, argument foo implies => argument bar.\n  var implied = {}\n  self.implies = function (key, value) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.implies(k, key[k])\n      })\n    } else {\n      yargs.global(key)\n      implied[key] = value\n    }\n  }\n  self.getImplied = function () {\n    return implied\n  }\n\n  self.implications = function (argv) {\n    const implyFail = []\n\n    Object.keys(implied).forEach(function (key) {\n      var num\n      const origKey = key\n      var value = implied[key]\n\n      // convert string '1' to number 1\n      num = Number(key)\n      key = isNaN(num) ? key : num\n\n      if (typeof key === 'number') {\n        // check length of argv._\n        key = argv._.length >= key\n      } else if (key.match(/^--no-.+/)) {\n        // check if key doesn't exist\n        key = key.match(/^--no-(.+)/)[1]\n        key = !argv[key]\n      } else {\n        // check if key exists\n        key = argv[key]\n      }\n\n      num = Number(value)\n      value = isNaN(num) ? value : num\n\n      if (typeof value === 'number') {\n        value = argv._.length >= value\n      } else if (value.match(/^--no-.+/)) {\n        value = value.match(/^--no-(.+)/)[1]\n        value = !argv[value]\n      } else {\n        value = argv[value]\n      }\n\n      if (key && !value) {\n        implyFail.push(origKey)\n      }\n    })\n\n    if (implyFail.length) {\n      var msg = __('Implications failed:') + '\\n'\n\n      implyFail.forEach(function (key) {\n        msg += ('  ' + key + ' -> ' + implied[key])\n      })\n\n      usage.fail(msg)\n    }\n  }\n\n  var conflicting = {}\n  self.conflicts = function (key, value) {\n    if (typeof key === 'object') {\n      Object.keys(key).forEach(function (k) {\n        self.conflicts(k, key[k])\n      })\n    } else {\n      yargs.global(key)\n      conflicting[key] = value\n    }\n  }\n  self.getConflicting = function () {\n    return conflicting\n  }\n\n  self.conflicting = function (argv) {\n    var args = Object.getOwnPropertyNames(argv)\n\n    args.forEach(function (arg) {\n      if (conflicting[arg] && args.indexOf(conflicting[arg]) !== -1) {\n        usage.fail(__('Arguments %s and %s are mutually exclusive', arg, conflicting[arg]))\n      }\n    })\n  }\n\n  self.recommendCommands = function (cmd, potentialCommands) {\n    const distance = require('./levenshtein')\n    const threshold = 3 // if it takes more than three edits, let's move on.\n    potentialCommands = potentialCommands.sort(function (a, b) { return b.length - a.length })\n\n    var recommended = null\n    var bestDistance = Infinity\n    for (var i = 0, candidate; (candidate = potentialCommands[i]) !== undefined; i++) {\n      var d = distance(cmd, candidate)\n      if (d <= threshold && d < bestDistance) {\n        bestDistance = d\n        recommended = candidate\n      }\n    }\n    if (recommended) usage.fail(__('Did you mean %s?', recommended))\n  }\n\n  self.reset = function (localLookup) {\n    implied = objFilter(implied, function (k, v) {\n      return !localLookup[k]\n    })\n    conflicting = objFilter(conflicting, function (k, v) {\n      return !localLookup[k]\n    })\n    checks = checks.filter(function (c) {\n      return c.global\n    })\n    return self\n  }\n\n  var frozen\n  self.freeze = function () {\n    frozen = {}\n    frozen.implied = implied\n    frozen.checks = checks\n    frozen.conflicting = conflicting\n  }\n  self.unfreeze = function () {\n    implied = frozen.implied\n    checks = frozen.checks\n    conflicting = frozen.conflicting\n    frozen = undefined\n  }\n\n  return self\n}\n"]},"metadata":{},"sourceType":"script"}