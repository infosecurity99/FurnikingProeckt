{"ast":null,"code":"var PassThrough = require('stream').PassThrough;\n\nvar objectAssign = require('object-assign');\n\nmodule.exports = function (opts) {\n  opts = objectAssign({}, opts);\n  var array = opts.array;\n  var encoding = opts.encoding;\n  var buffer = encoding === 'buffer';\n  var objectMode = false;\n\n  if (array) {\n    objectMode = !(encoding || buffer);\n  } else {\n    encoding = encoding || 'utf8';\n  }\n\n  if (buffer) {\n    encoding = null;\n  }\n\n  var len = 0;\n  var ret = [];\n  var stream = new PassThrough({\n    objectMode: objectMode\n  });\n\n  if (encoding) {\n    stream.setEncoding(encoding);\n  }\n\n  stream.on('data', function (chunk) {\n    ret.push(chunk);\n\n    if (objectMode) {\n      len = ret.length;\n    } else {\n      len += chunk.length;\n    }\n  });\n\n  stream.getBufferedValue = function () {\n    if (array) {\n      return ret;\n    }\n\n    return buffer ? Buffer.concat(ret, len) : ret.join('');\n  };\n\n  stream.getBufferedLength = function () {\n    return len;\n  };\n\n  return stream;\n};","map":{"version":3,"sources":["C:/Users/Hp/node_modules/npx/node_modules/get-stream/buffer-stream.js"],"names":["PassThrough","require","objectAssign","module","exports","opts","array","encoding","buffer","objectMode","len","ret","stream","setEncoding","on","chunk","push","length","getBufferedValue","Buffer","concat","join","getBufferedLength"],"mappings":"AAAA,IAAIA,WAAW,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,WAApC;;AACA,IAAIE,YAAY,GAAGD,OAAO,CAAC,eAAD,CAA1B;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,IAAV,EAAgB;AAChCA,EAAAA,IAAI,GAAGH,YAAY,CAAC,EAAD,EAAKG,IAAL,CAAnB;AAEA,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AACA,MAAIC,QAAQ,GAAGF,IAAI,CAACE,QAApB;AAEA,MAAIC,MAAM,GAAGD,QAAQ,KAAK,QAA1B;AACA,MAAIE,UAAU,GAAG,KAAjB;;AAEA,MAAIH,KAAJ,EAAW;AACVG,IAAAA,UAAU,GAAG,EAAEF,QAAQ,IAAIC,MAAd,CAAb;AACA,GAFD,MAEO;AACND,IAAAA,QAAQ,GAAGA,QAAQ,IAAI,MAAvB;AACA;;AAED,MAAIC,MAAJ,EAAY;AACXD,IAAAA,QAAQ,GAAG,IAAX;AACA;;AAED,MAAIG,GAAG,GAAG,CAAV;AACA,MAAIC,GAAG,GAAG,EAAV;AAEA,MAAIC,MAAM,GAAG,IAAIZ,WAAJ,CAAgB;AAACS,IAAAA,UAAU,EAAEA;AAAb,GAAhB,CAAb;;AAEA,MAAIF,QAAJ,EAAc;AACbK,IAAAA,MAAM,CAACC,WAAP,CAAmBN,QAAnB;AACA;;AAEDK,EAAAA,MAAM,CAACE,EAAP,CAAU,MAAV,EAAkB,UAAUC,KAAV,EAAiB;AAClCJ,IAAAA,GAAG,CAACK,IAAJ,CAASD,KAAT;;AAEA,QAAIN,UAAJ,EAAgB;AACfC,MAAAA,GAAG,GAAGC,GAAG,CAACM,MAAV;AACA,KAFD,MAEO;AACNP,MAAAA,GAAG,IAAIK,KAAK,CAACE,MAAb;AACA;AACD,GARD;;AAUAL,EAAAA,MAAM,CAACM,gBAAP,GAA0B,YAAY;AACrC,QAAIZ,KAAJ,EAAW;AACV,aAAOK,GAAP;AACA;;AACD,WAAOH,MAAM,GAAGW,MAAM,CAACC,MAAP,CAAcT,GAAd,EAAmBD,GAAnB,CAAH,GAA6BC,GAAG,CAACU,IAAJ,CAAS,EAAT,CAA1C;AACA,GALD;;AAOAT,EAAAA,MAAM,CAACU,iBAAP,GAA2B,YAAY;AACtC,WAAOZ,GAAP;AACA,GAFD;;AAIA,SAAOE,MAAP;AACA,CAlDD","sourcesContent":["var PassThrough = require('stream').PassThrough;\nvar objectAssign = require('object-assign');\n\nmodule.exports = function (opts) {\n\topts = objectAssign({}, opts);\n\n\tvar array = opts.array;\n\tvar encoding = opts.encoding;\n\n\tvar buffer = encoding === 'buffer';\n\tvar objectMode = false;\n\n\tif (array) {\n\t\tobjectMode = !(encoding || buffer);\n\t} else {\n\t\tencoding = encoding || 'utf8';\n\t}\n\n\tif (buffer) {\n\t\tencoding = null;\n\t}\n\n\tvar len = 0;\n\tvar ret = [];\n\n\tvar stream = new PassThrough({objectMode: objectMode});\n\n\tif (encoding) {\n\t\tstream.setEncoding(encoding);\n\t}\n\n\tstream.on('data', function (chunk) {\n\t\tret.push(chunk);\n\n\t\tif (objectMode) {\n\t\t\tlen = ret.length;\n\t\t} else {\n\t\t\tlen += chunk.length;\n\t\t}\n\t});\n\n\tstream.getBufferedValue = function () {\n\t\tif (array) {\n\t\t\treturn ret;\n\t\t}\n\t\treturn buffer ? Buffer.concat(ret, len) : ret.join('');\n\t};\n\n\tstream.getBufferedLength = function () {\n\t\treturn len;\n\t};\n\n\treturn stream;\n};\n"]},"metadata":{},"sourceType":"script"}