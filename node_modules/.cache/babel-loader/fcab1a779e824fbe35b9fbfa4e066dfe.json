{"ast":null,"code":"var licenseIDs = require('spdx-license-ids');\n\nfunction valid(string) {\n  return licenseIDs.indexOf(string) > -1;\n} // Common transpositions of license identifier acronyms\n\n\nvar transpositions = [['APGL', 'AGPL'], ['Gpl', 'GPL'], ['GLP', 'GPL'], ['APL', 'Apache'], ['ISD', 'ISC'], ['GLP', 'GPL'], ['IST', 'ISC'], ['Claude', 'Clause'], [' or later', '+'], [' International', ''], ['GNU', 'GPL'], ['GUN', 'GPL'], ['+', ''], ['GNU GPL', 'GPL'], ['GNU/GPL', 'GPL'], ['GNU GLP', 'GPL'], ['GNU General Public License', 'GPL'], ['Gnu public license', 'GPL'], ['GNU Public License', 'GPL'], ['GNU GENERAL PUBLIC LICENSE', 'GPL'], ['MTI', 'MIT'], ['Mozilla Public License', 'MPL'], ['WTH', 'WTF'], ['-License', '']];\nvar TRANSPOSED = 0;\nvar CORRECT = 1; // Simple corrections to nearly valid identifiers.\n\nvar transforms = [// e.g. 'mit'\nfunction (argument) {\n  return argument.toUpperCase();\n}, // e.g. 'MIT '\nfunction (argument) {\n  return argument.trim();\n}, // e.g. 'M.I.T.'\nfunction (argument) {\n  return argument.replace(/\\./g, '');\n}, // e.g. 'Apache- 2.0'\nfunction (argument) {\n  return argument.replace(/\\s+/g, '');\n}, // e.g. 'CC BY 4.0''\nfunction (argument) {\n  return argument.replace(/\\s+/g, '-');\n}, // e.g. 'LGPLv2.1'\nfunction (argument) {\n  return argument.replace('v', '-');\n}, // e.g. 'Apache 2.0'\nfunction (argument) {\n  return argument.replace(/,?\\s*(\\d)/, '-$1');\n}, // e.g. 'GPL 2'\nfunction (argument) {\n  return argument.replace(/,?\\s*(\\d)/, '-$1.0');\n}, // e.g. 'Apache Version 2.0'\nfunction (argument) {\n  return argument.replace(/,?\\s*(V\\.|v\\.|V|v|Version|version)\\s*(\\d)/, '-$2');\n}, // e.g. 'Apache Version 2'\nfunction (argument) {\n  return argument.replace(/,?\\s*(V\\.|v\\.|V|v|Version|version)\\s*(\\d)/, '-$2.0');\n}, // e.g. 'ZLIB'\nfunction (argument) {\n  return argument[0].toUpperCase() + argument.slice(1);\n}, // e.g. 'MPL/2.0'\nfunction (argument) {\n  return argument.replace('/', '-');\n}, // e.g. 'Apache 2'\nfunction (argument) {\n  return argument.replace(/\\s*V\\s*(\\d)/, '-$1').replace(/(\\d)$/, '$1.0');\n}, // e.g. 'GPL-2.0-'\nfunction (argument) {\n  return argument.slice(0, argument.length - 1);\n}, // e.g. 'GPL2'\nfunction (argument) {\n  return argument.replace(/(\\d)$/, '-$1.0');\n}, // e.g. 'BSD 3'\nfunction (argument) {\n  return argument.replace(/(-| )?(\\d)$/, '-$2-Clause');\n}, // e.g. 'BSD clause 3'\nfunction (argument) {\n  return argument.replace(/(-| )clause(-| )(\\d)/, '-$3-Clause');\n}, // e.g. 'BY-NC-4.0'\nfunction (argument) {\n  return 'CC-' + argument;\n}, // e.g. 'BY-NC'\nfunction (argument) {\n  return 'CC-' + argument + '-4.0';\n}, // e.g. 'Attribution-NonCommercial'\nfunction (argument) {\n  return argument.replace('Attribution', 'BY').replace('NonCommercial', 'NC').replace('NoDerivatives', 'ND').replace(/ (\\d)/, '-$1').replace(/ ?International/, '');\n}, // e.g. 'Attribution-NonCommercial'\nfunction (argument) {\n  return 'CC-' + argument.replace('Attribution', 'BY').replace('NonCommercial', 'NC').replace('NoDerivatives', 'ND').replace(/ (\\d)/, '-$1').replace(/ ?International/, '') + '-4.0';\n}]; // If all else fails, guess that strings containing certain substrings\n// meant to identify certain licenses.\n\nvar lastResorts = [['UNLI', 'Unlicense'], ['WTF', 'WTFPL'], ['2 CLAUSE', 'BSD-2-Clause'], ['2-CLAUSE', 'BSD-2-Clause'], ['3 CLAUSE', 'BSD-3-Clause'], ['3-CLAUSE', 'BSD-3-Clause'], ['AFFERO', 'AGPL-3.0'], ['AGPL', 'AGPL-3.0'], ['APACHE', 'Apache-2.0'], ['ARTISTIC', 'Artistic-2.0'], ['Affero', 'AGPL-3.0'], ['BEER', 'Beerware'], ['BOOST', 'BSL-1.0'], ['BSD', 'BSD-2-Clause'], ['ECLIPSE', 'EPL-1.0'], ['FUCK', 'WTFPL'], ['GNU', 'GPL-3.0'], ['LGPL', 'LGPL-3.0'], ['GPL', 'GPL-3.0'], ['MIT', 'MIT'], ['MPL', 'MPL-2.0'], ['X11', 'X11'], ['ZLIB', 'Zlib']];\nvar SUBSTRING = 0;\nvar IDENTIFIER = 1;\n\nvar validTransformation = function (identifier) {\n  for (var i = 0; i < transforms.length; i++) {\n    var transformed = transforms[i](identifier);\n\n    if (transformed !== identifier && valid(transformed)) {\n      return transformed;\n    }\n  }\n\n  return null;\n};\n\nvar validLastResort = function (identifier) {\n  var upperCased = identifier.toUpperCase();\n\n  for (var i = 0; i < lastResorts.length; i++) {\n    var lastResort = lastResorts[i];\n\n    if (upperCased.indexOf(lastResort[SUBSTRING]) > -1) {\n      return lastResort[IDENTIFIER];\n    }\n  }\n\n  return null;\n};\n\nvar anyCorrection = function (identifier, check) {\n  for (var i = 0; i < transpositions.length; i++) {\n    var transposition = transpositions[i];\n    var transposed = transposition[TRANSPOSED];\n\n    if (identifier.indexOf(transposed) > -1) {\n      var corrected = identifier.replace(transposed, transposition[CORRECT]);\n      var checked = check(corrected);\n\n      if (checked !== null) {\n        return checked;\n      }\n    }\n  }\n\n  return null;\n};\n\nmodule.exports = function (identifier) {\n  identifier = identifier.replace(/\\+$/, '');\n\n  if (valid(identifier)) {\n    return identifier;\n  }\n\n  var transformed = validTransformation(identifier);\n\n  if (transformed !== null) {\n    return transformed;\n  }\n\n  transformed = anyCorrection(identifier, function (argument) {\n    if (valid(argument)) {\n      return argument;\n    }\n\n    return validTransformation(argument);\n  });\n\n  if (transformed !== null) {\n    return transformed;\n  }\n\n  transformed = validLastResort(identifier);\n\n  if (transformed !== null) {\n    return transformed;\n  }\n\n  transformed = anyCorrection(identifier, validLastResort);\n\n  if (transformed !== null) {\n    return transformed;\n  }\n\n  return null;\n};","map":{"version":3,"sources":["C:/Users/Hp/node_modules/npx/node_modules/spdx-correct/index.js"],"names":["licenseIDs","require","valid","string","indexOf","transpositions","TRANSPOSED","CORRECT","transforms","argument","toUpperCase","trim","replace","slice","length","lastResorts","SUBSTRING","IDENTIFIER","validTransformation","identifier","i","transformed","validLastResort","upperCased","lastResort","anyCorrection","check","transposition","transposed","corrected","checked","module","exports"],"mappings":"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","sourcesContent":["var licenseIDs = require('spdx-license-ids');\n\nfunction valid(string) {\n  return licenseIDs.indexOf(string) > -1;\n}\n\n// Common transpositions of license identifier acronyms\nvar transpositions = [\n  ['APGL', 'AGPL'],\n  ['Gpl', 'GPL'],\n  ['GLP', 'GPL'],\n  ['APL', 'Apache'],\n  ['ISD', 'ISC'],\n  ['GLP', 'GPL'],\n  ['IST', 'ISC'],\n  ['Claude', 'Clause'],\n  [' or later', '+'],\n  [' International', ''],\n  ['GNU', 'GPL'],\n  ['GUN', 'GPL'],\n  ['+', ''],\n  ['GNU GPL', 'GPL'],\n  ['GNU/GPL', 'GPL'],\n  ['GNU GLP', 'GPL'],\n  ['GNU General Public License', 'GPL'],\n  ['Gnu public license', 'GPL'],\n  ['GNU Public License', 'GPL'],\n  ['GNU GENERAL PUBLIC LICENSE', 'GPL'],\n  ['MTI', 'MIT'],\n  ['Mozilla Public License', 'MPL'],\n  ['WTH', 'WTF'],\n  ['-License', '']\n];\n\nvar TRANSPOSED = 0;\nvar CORRECT = 1;\n\n// Simple corrections to nearly valid identifiers.\nvar transforms = [\n  // e.g. 'mit'\n  function(argument) {\n    return argument.toUpperCase();\n  },\n  // e.g. 'MIT '\n  function(argument) {\n    return argument.trim();\n  },\n  // e.g. 'M.I.T.'\n  function(argument) {\n    return argument.replace(/\\./g, '');\n  },\n  // e.g. 'Apache- 2.0'\n  function(argument) {\n    return argument.replace(/\\s+/g, '');\n  },\n  // e.g. 'CC BY 4.0''\n  function(argument) {\n    return argument.replace(/\\s+/g, '-');\n  },\n  // e.g. 'LGPLv2.1'\n  function(argument) {\n    return argument.replace('v', '-');\n  },\n  // e.g. 'Apache 2.0'\n  function(argument) {\n    return argument.replace(/,?\\s*(\\d)/, '-$1');\n  },\n  // e.g. 'GPL 2'\n  function(argument) {\n    return argument.replace(/,?\\s*(\\d)/, '-$1.0');\n  },\n  // e.g. 'Apache Version 2.0'\n  function(argument) {\n    return argument.replace(/,?\\s*(V\\.|v\\.|V|v|Version|version)\\s*(\\d)/, '-$2');\n  },\n  // e.g. 'Apache Version 2'\n  function(argument) {\n    return argument.replace(/,?\\s*(V\\.|v\\.|V|v|Version|version)\\s*(\\d)/, '-$2.0');\n  },\n  // e.g. 'ZLIB'\n  function(argument) {\n    return argument[0].toUpperCase() + argument.slice(1);\n  },\n  // e.g. 'MPL/2.0'\n  function(argument) {\n    return argument.replace('/', '-');\n  },\n  // e.g. 'Apache 2'\n  function(argument) {\n    return argument\n      .replace(/\\s*V\\s*(\\d)/, '-$1')\n      .replace(/(\\d)$/, '$1.0');\n  },\n  // e.g. 'GPL-2.0-'\n  function(argument) {\n    return argument.slice(0, argument.length - 1);\n  },\n  // e.g. 'GPL2'\n  function(argument) {\n    return argument.replace(/(\\d)$/, '-$1.0');\n  },\n  // e.g. 'BSD 3'\n  function(argument) {\n    return argument.replace(/(-| )?(\\d)$/, '-$2-Clause');\n  },\n  // e.g. 'BSD clause 3'\n  function(argument) {\n    return argument.replace(/(-| )clause(-| )(\\d)/, '-$3-Clause');\n  },\n  // e.g. 'BY-NC-4.0'\n  function(argument) {\n    return 'CC-' + argument;\n  },\n  // e.g. 'BY-NC'\n  function(argument) {\n    return 'CC-' + argument + '-4.0';\n  },\n  // e.g. 'Attribution-NonCommercial'\n  function(argument) {\n    return argument\n      .replace('Attribution', 'BY')\n      .replace('NonCommercial', 'NC')\n      .replace('NoDerivatives', 'ND')\n      .replace(/ (\\d)/, '-$1')\n      .replace(/ ?International/, '');\n  },\n  // e.g. 'Attribution-NonCommercial'\n  function(argument) {\n    return 'CC-' +\n      argument\n      .replace('Attribution', 'BY')\n      .replace('NonCommercial', 'NC')\n      .replace('NoDerivatives', 'ND')\n      .replace(/ (\\d)/, '-$1')\n      .replace(/ ?International/, '') +\n      '-4.0';\n  }\n];\n\n// If all else fails, guess that strings containing certain substrings\n// meant to identify certain licenses.\nvar lastResorts = [\n  ['UNLI', 'Unlicense'],\n  ['WTF', 'WTFPL'],\n  ['2 CLAUSE', 'BSD-2-Clause'],\n  ['2-CLAUSE', 'BSD-2-Clause'],\n  ['3 CLAUSE', 'BSD-3-Clause'],\n  ['3-CLAUSE', 'BSD-3-Clause'],\n  ['AFFERO', 'AGPL-3.0'],\n  ['AGPL', 'AGPL-3.0'],\n  ['APACHE', 'Apache-2.0'],\n  ['ARTISTIC', 'Artistic-2.0'],\n  ['Affero', 'AGPL-3.0'],\n  ['BEER', 'Beerware'],\n  ['BOOST', 'BSL-1.0'],\n  ['BSD', 'BSD-2-Clause'],\n  ['ECLIPSE', 'EPL-1.0'],\n  ['FUCK', 'WTFPL'],\n  ['GNU', 'GPL-3.0'],\n  ['LGPL', 'LGPL-3.0'],\n  ['GPL', 'GPL-3.0'],\n  ['MIT', 'MIT'],\n  ['MPL', 'MPL-2.0'],\n  ['X11', 'X11'],\n  ['ZLIB', 'Zlib']\n];\n\nvar SUBSTRING = 0;\nvar IDENTIFIER = 1;\n\nvar validTransformation = function(identifier) {\n  for (var i = 0; i < transforms.length; i++) {\n    var transformed = transforms[i](identifier);\n    if (transformed !== identifier && valid(transformed)) {\n      return transformed;\n    }\n  }\n  return null;\n};\n\nvar validLastResort = function(identifier) {\n  var upperCased = identifier.toUpperCase();\n  for (var i = 0; i < lastResorts.length; i++) {\n    var lastResort = lastResorts[i];\n    if (upperCased.indexOf(lastResort[SUBSTRING]) > -1) {\n      return lastResort[IDENTIFIER];\n    }\n  }\n  return null;\n};\n\nvar anyCorrection = function(identifier, check) {\n  for (var i = 0; i < transpositions.length; i++) {\n    var transposition = transpositions[i];\n    var transposed = transposition[TRANSPOSED];\n    if (identifier.indexOf(transposed) > -1) {\n      var corrected = identifier.replace(\n        transposed,\n        transposition[CORRECT]\n      );\n      var checked = check(corrected);\n      if (checked !== null) {\n        return checked;\n      }\n    }\n  }\n  return null;\n};\n\nmodule.exports = function(identifier) {\n  identifier = identifier.replace(/\\+$/, '');\n  if (valid(identifier)) {\n    return identifier;\n  }\n  var transformed = validTransformation(identifier);\n  if (transformed !== null) {\n    return transformed;\n  }\n  transformed = anyCorrection(identifier, function(argument) {\n    if (valid(argument)) {\n      return argument;\n    }\n    return validTransformation(argument);\n  });\n  if (transformed !== null) {\n    return transformed;\n  }\n  transformed = validLastResort(identifier);\n  if (transformed !== null) {\n    return transformed;\n  }\n  transformed = anyCorrection(identifier, validLastResort);\n  if (transformed !== null) {\n    return transformed;\n  }\n  return null;\n};\n"]},"metadata":{},"sourceType":"script"}